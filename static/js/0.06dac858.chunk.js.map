{"version":3,"sources":["../../../src/index.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../../../../src/Common/EncodingCategory.ts","../node_modules/trie-prefix-tree/dist/config.js","../../../../src/Braille/BrailleEncoding.ts","../../../../src/Semaphore/SemaphoreEncoding.ts","../../../../src/Common/EncodingCharacterBase.ts","../../../../src/Common/EncodingDataBase.ts","../../../../src/Cipher/CaesarUtils.ts","../../../../src/Cipher/KeyedCipherStringBase.ts","../../../../src/Conversion/CharacterEncoding.ts","../../../../src/Morse/MorseEncoding.ts","../../../../src/Braille/BrailleData.ts","../../../../src/Common/EncodingEntry.ts","../../../../src/Conversion/CharacterConversion.ts","../../../../src/Conversion/CharacterTableEntry.ts","../../../../src/Common/CharacterImage.ts","../../../../src/Common/InlineSvg.ts","../../../../src/Conversion/CharacterAutoConvert.ts","../../../../src/Morse/MorseCharacter.ts","../../../../src/Common/Helpers.ts","../../../../src/Nato/NatoCharacter.ts","../../../../src/Resistor/ResistorColorEntry.ts","../../../../src/Semaphore/SemaphoreData.ts","../../../../src/Semaphore/SemaphoreDegrees.ts","../../../../src/Semaphore/SemaphoreDirection.ts","../../../../src/WordSearch/Result.ts","../../../../src/WordSearch/WordSearchDirection.ts","../node_modules/trie-prefix-tree/dist/append.js","../node_modules/trie-prefix-tree/dist/utils.js","../../../../src/Braille/BrailleCharacter.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../../../../src/Common/EncodingLookupResult.ts","../../../../src/Braille/BrailleDot.ts","../../../../src/Braille/BrailleStream.ts","../../../../src/Cipher/AutoKeyString.ts","../../../../src/Cipher/CaesarString.ts","../../../../src/Cipher/VigenereString.ts","../../../../src/Conversion/SignificantFigures.ts","../../../../src/Conversion/StringAutoConvert.ts","../../../../src/Morse/MorseData.ts","../../../../src/Morse/MorseString.ts","../../../../src/Nato/NatoData.ts","../../../../src/NavalFlags/NavalFlags.ts","../../../../src/Resistor/Resistor.ts","../../../../src/Semaphore/SemaphoreCharacter.ts","../../../../src/Semaphore/SemaphoreStream.ts","../../../../src/WordSearch/WordSearchSolver.ts","../node_modules/trie-prefix-tree/dist/index.js","../node_modules/trie-prefix-tree/dist/create.js","../node_modules/trie-prefix-tree/dist/checkPrefix.js","../node_modules/trie-prefix-tree/dist/recursePrefix.js","../node_modules/trie-prefix-tree/dist/recurseRandomWord.js","../node_modules/trie-prefix-tree/dist/permutations.js"],"names":["unsupportedIterableToArray","module","exports","o","Symbol","iterator","Array","isArray","i","F","s","n","length","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","EncodingCategory","Object","defineProperty","default","END_WORD","END_WORD_REPLACER","PERMS_MIN_LEN","BrailleEncoding","SemaphoreEncoding","rot","base","text","this","CharacterEncoding","arg","shift","MorseEncoding","Dash","SemaphoreDirection","WordSearchDirection","trie","letter","index","array","isEndWordLetter","_config2","isLastLetter","obj","_config","require","__esModule","objectCopy","JSON","parse","stringify","spacer","arguments","undefined","arrayLikeToArray","minLen","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","BrailleDot","Helpers_1","Helpers","Resistor","SemaphoreData_1","SemaphoreDegrees_1","Result_1","WordSearchDirection_1","_typeof","input","_create2","concat","_toConsumableArray","tree","dump","_utils2","addWord","word","toLowerCase","split","reduce","_append2","apply","removeWord","_checkPrefix","_checkPrefix6","prefixFound","prefixNode","isPrefix","prefix","getPrefix","strPrefix","sorted","_recursePrefix2","getRandomWordWithPrefix","_recurseRandomWord2","countPrefix","getWords","hasWord","_checkPrefix4","getAnagrams","letters","_permutations2","type","getSubAnagrams","_interopRequireDefault","accumulator","item","_append","every","_utils","recursePrefix","node","prefixes","branch","currentLetter","pushInOrder","push","splice","recurseRandomWord","branches","keys","Math","floor","random","opts","words","permute","wordIsEmpty","wordFound","indexOf","endWordFound","remaining","substring","sort"],"mappings":"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","file":"static/js/0.06dac858.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrailleCharacter_1 = require(\"./Braille/BrailleCharacter\");\nexports.BrailleCharacter = BrailleCharacter_1.BrailleCharacter;\nvar BrailleDot_1 = require(\"./Braille/BrailleDot\");\nexports.BrailleDot = BrailleDot_1.BrailleDot;\nvar BrailleEncoding_1 = require(\"./Braille/BrailleEncoding\");\nexports.BrailleEncoding = BrailleEncoding_1.BrailleEncoding;\nvar BrailleStream_1 = require(\"./Braille/BrailleStream\");\nexports.BrailleStream = BrailleStream_1.BrailleStream;\nvar AutoKeyString_1 = require(\"./Cipher/AutoKeyString\");\nexports.AutoKeyString = AutoKeyString_1.AutoKeyString;\nvar CaesarString_1 = require(\"./Cipher/CaesarString\");\nexports.CaesarString = CaesarString_1.CaesarString;\nvar KeyedCipherStringBase_1 = require(\"./Cipher/KeyedCipherStringBase\");\nexports.KeyedCipherStringBase = KeyedCipherStringBase_1.KeyedCipherStringBase;\nvar VigenereString_1 = require(\"./Cipher/VigenereString\");\nexports.VigenereString = VigenereString_1.VigenereString;\nvar CharacterImage_1 = require(\"./Common/CharacterImage\");\nexports.CharacterImage = CharacterImage_1.CharacterImage;\nvar EncodingCategory_1 = require(\"./Common/EncodingCategory\");\nexports.EncodingCategory = EncodingCategory_1.EncodingCategory;\nvar EncodingEntry_1 = require(\"./Common/EncodingEntry\");\nexports.EncodingEntry = EncodingEntry_1.EncodingEntry;\nvar InlineSvg_1 = require(\"./Common/InlineSvg\");\nexports.InlineSvg = InlineSvg_1.InlineSvg;\nvar CharacterAutoConvert_1 = require(\"./Conversion/CharacterAutoConvert\");\nexports.CharacterAutoConvert = CharacterAutoConvert_1.CharacterAutoConvert;\nvar CharacterConversion_1 = require(\"./Conversion/CharacterConversion\");\nexports.CharacterConversion = CharacterConversion_1.CharacterConversion;\nvar CharacterEncoding_1 = require(\"./Conversion/CharacterEncoding\");\nexports.CharacterEncoding = CharacterEncoding_1.CharacterEncoding;\nvar CharacterTableEntry_1 = require(\"./Conversion/CharacterTableEntry\");\nexports.CharacterTableEntry = CharacterTableEntry_1.CharacterTableEntry;\nvar SignificantFigures_1 = require(\"./Conversion/SignificantFigures\");\nexports.SignificantFigures = SignificantFigures_1.SignificantFigures;\nvar StringAutoConvert_1 = require(\"./Conversion/StringAutoConvert\");\nexports.StringAutoConvert = StringAutoConvert_1.StringAutoConvert;\nvar MorseCharacter_1 = require(\"./Morse/MorseCharacter\");\nexports.MorseCharacter = MorseCharacter_1.MorseCharacter;\nvar MorseEncoding_1 = require(\"./Morse/MorseEncoding\");\nexports.MorseEncoding = MorseEncoding_1.MorseEncoding;\nvar MorseString_1 = require(\"./Morse/MorseString\");\nexports.MorseString = MorseString_1.MorseString;\nvar NatoCharacter_1 = require(\"./Nato/NatoCharacter\");\nexports.NatoCharacter = NatoCharacter_1.NatoCharacter;\nvar NatoData_1 = require(\"./Nato/NatoData\");\nexports.NatoData = NatoData_1.NatoData;\nvar NavalFlags_1 = require(\"./NavalFlags/NavalFlags\");\nexports.NavalFlags = NavalFlags_1.NavalFlags;\nvar Resistor_1 = require(\"./Resistor/Resistor\");\nexports.Resistor = Resistor_1.Resistor;\nvar ResistorColorEntry_1 = require(\"./Resistor/ResistorColorEntry\");\nexports.ResistorColorEntry = ResistorColorEntry_1.ResistorColorEntry;\nvar SemaphoreCharacter_1 = require(\"./Semaphore/SemaphoreCharacter\");\nexports.SemaphoreCharacter = SemaphoreCharacter_1.SemaphoreCharacter;\nvar SemaphoreDegrees_1 = require(\"./Semaphore/SemaphoreDegrees\");\nexports.SemaphoreDegrees = SemaphoreDegrees_1.SemaphoreDegrees;\nvar SemaphoreDirection_1 = require(\"./Semaphore/SemaphoreDirection\");\nexports.SemaphoreDirection = SemaphoreDirection_1.SemaphoreDirection;\nvar SemaphoreEncoding_1 = require(\"./Semaphore/SemaphoreEncoding\");\nexports.SemaphoreEncoding = SemaphoreEncoding_1.SemaphoreEncoding;\nvar SemaphoreStream_1 = require(\"./Semaphore/SemaphoreStream\");\nexports.SemaphoreStream = SemaphoreStream_1.SemaphoreStream;\nvar Result_1 = require(\"./WordSearch/Result\");\nexports.WordSearchResult = Result_1.Result;\nvar WordSearchDirection_1 = require(\"./WordSearch/WordSearchDirection\");\nexports.WordSearchDirection = WordSearchDirection_1.WordSearchDirection;\nvar WordSearchSolver_1 = require(\"./WordSearch/WordSearchSolver\");\nexports.WordSearchSolver = WordSearchSolver_1.WordSearchSolver;\n//# sourceMappingURL=index.js.map","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EncodingCategory;\n(function (EncodingCategory) {\n    EncodingCategory[EncodingCategory[\"None\"] = 0] = \"None\";\n    EncodingCategory[EncodingCategory[\"Letter\"] = 2] = \"Letter\";\n    EncodingCategory[EncodingCategory[\"Number\"] = 4] = \"Number\";\n    EncodingCategory[EncodingCategory[\"Formatting\"] = 8] = \"Formatting\";\n    EncodingCategory[EncodingCategory[\"Punctuation\"] = 16] = \"Punctuation\";\n    EncodingCategory[EncodingCategory[\"All\"] = 255] = \"All\";\n})(EncodingCategory = exports.EncodingCategory || (exports.EncodingCategory = {}));\n//# sourceMappingURL=EncodingCategory.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  END_WORD: '$',\n  END_WORD_REPLACER: '9a219a89-91cd-42e2-abd5-eb113af08ca8',\n  PERMS_MIN_LEN: 2\n};\nmodule.exports = exports['default'];","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrailleEncoding;\n(function (BrailleEncoding) {\n    BrailleEncoding[BrailleEncoding[\"None\"] = 0] = \"None\";\n    // Letters (first decade)\n    BrailleEncoding[BrailleEncoding[\"LetterA\"] = 1] = \"LetterA\";\n    BrailleEncoding[BrailleEncoding[\"LetterB\"] = 3] = \"LetterB\";\n    BrailleEncoding[BrailleEncoding[\"LetterC\"] = 9] = \"LetterC\";\n    BrailleEncoding[BrailleEncoding[\"LetterD\"] = 25] = \"LetterD\";\n    BrailleEncoding[BrailleEncoding[\"LetterE\"] = 17] = \"LetterE\";\n    BrailleEncoding[BrailleEncoding[\"LetterF\"] = 11] = \"LetterF\";\n    BrailleEncoding[BrailleEncoding[\"LetterG\"] = 27] = \"LetterG\";\n    BrailleEncoding[BrailleEncoding[\"LetterH\"] = 19] = \"LetterH\";\n    BrailleEncoding[BrailleEncoding[\"LetterI\"] = 10] = \"LetterI\";\n    BrailleEncoding[BrailleEncoding[\"LetterJ\"] = 26] = \"LetterJ\";\n    // Letters (second decade)\n    BrailleEncoding[BrailleEncoding[\"LetterK\"] = 5] = \"LetterK\";\n    BrailleEncoding[BrailleEncoding[\"LetterL\"] = 7] = \"LetterL\";\n    BrailleEncoding[BrailleEncoding[\"LetterM\"] = 13] = \"LetterM\";\n    BrailleEncoding[BrailleEncoding[\"LetterN\"] = 29] = \"LetterN\";\n    BrailleEncoding[BrailleEncoding[\"LetterO\"] = 21] = \"LetterO\";\n    BrailleEncoding[BrailleEncoding[\"LetterP\"] = 15] = \"LetterP\";\n    BrailleEncoding[BrailleEncoding[\"LetterQ\"] = 31] = \"LetterQ\";\n    BrailleEncoding[BrailleEncoding[\"LetterR\"] = 23] = \"LetterR\";\n    BrailleEncoding[BrailleEncoding[\"LetterS\"] = 14] = \"LetterS\";\n    BrailleEncoding[BrailleEncoding[\"LetterT\"] = 30] = \"LetterT\";\n    // Letters (third decade)\n    BrailleEncoding[BrailleEncoding[\"LetterU\"] = 37] = \"LetterU\";\n    BrailleEncoding[BrailleEncoding[\"LetterV\"] = 39] = \"LetterV\";\n    BrailleEncoding[BrailleEncoding[\"LetterX\"] = 45] = \"LetterX\";\n    BrailleEncoding[BrailleEncoding[\"LetterY\"] = 61] = \"LetterY\";\n    BrailleEncoding[BrailleEncoding[\"LetterZ\"] = 53] = \"LetterZ\";\n    // Letters (fourth decade)\n    BrailleEncoding[BrailleEncoding[\"LetterW\"] = 58] = \"LetterW\";\n    // Numbers\n    BrailleEncoding[BrailleEncoding[\"Number1\"] = 1] = \"Number1\";\n    BrailleEncoding[BrailleEncoding[\"Number2\"] = 3] = \"Number2\";\n    BrailleEncoding[BrailleEncoding[\"Number3\"] = 9] = \"Number3\";\n    BrailleEncoding[BrailleEncoding[\"Number4\"] = 25] = \"Number4\";\n    BrailleEncoding[BrailleEncoding[\"Number5\"] = 17] = \"Number5\";\n    BrailleEncoding[BrailleEncoding[\"Number6\"] = 11] = \"Number6\";\n    BrailleEncoding[BrailleEncoding[\"Number7\"] = 27] = \"Number7\";\n    BrailleEncoding[BrailleEncoding[\"Number8\"] = 19] = \"Number8\";\n    BrailleEncoding[BrailleEncoding[\"Number9\"] = 10] = \"Number9\";\n    BrailleEncoding[BrailleEncoding[\"Number0\"] = 26] = \"Number0\";\n    // Formatting\n    BrailleEncoding[BrailleEncoding[\"FormattingNumber\"] = 60] = \"FormattingNumber\";\n    BrailleEncoding[BrailleEncoding[\"FormattingCapital\"] = 32] = \"FormattingCapital\";\n    // Punctuation\n    BrailleEncoding[BrailleEncoding[\"PunctuationComma\"] = 2] = \"PunctuationComma\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationSemicolon\"] = 6] = \"PunctuationSemicolon\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationApostrophe\"] = 4] = \"PunctuationApostrophe\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationColon\"] = 18] = \"PunctuationColon\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationHyphen\"] = 36] = \"PunctuationHyphen\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationDecimalPoint\"] = 40] = \"PunctuationDecimalPoint\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationFullStop\"] = 50] = \"PunctuationFullStop\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationExclamationPoint\"] = 22] = \"PunctuationExclamationPoint\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationOpenQuote\"] = 38] = \"PunctuationOpenQuote\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationQuestionMark\"] = 38] = \"PunctuationQuestionMark\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationCloseQuote\"] = 52] = \"PunctuationCloseQuote\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationBracket\"] = 54] = \"PunctuationBracket\";\n    BrailleEncoding[BrailleEncoding[\"PunctuationSlash\"] = 12] = \"PunctuationSlash\";\n})(BrailleEncoding = exports.BrailleEncoding || (exports.BrailleEncoding = {}));\n//# sourceMappingURL=BrailleEncoding.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SemaphoreEncoding;\n(function (SemaphoreEncoding) {\n    SemaphoreEncoding[SemaphoreEncoding[\"None\"] = 0] = \"None\";\n    // Letters\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterA\"] = 96] = \"LetterA\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterB\"] = 160] = \"LetterB\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterC\"] = 288] = \"LetterC\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterD\"] = 34] = \"LetterD\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterE\"] = 36] = \"LetterE\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterF\"] = 40] = \"LetterF\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterG\"] = 48] = \"LetterG\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterH\"] = 192] = \"LetterH\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterI\"] = 320] = \"LetterI\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterJ\"] = 10] = \"LetterJ\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterK\"] = 66] = \"LetterK\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterL\"] = 68] = \"LetterL\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterM\"] = 72] = \"LetterM\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterN\"] = 80] = \"LetterN\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterO\"] = 384] = \"LetterO\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterP\"] = 130] = \"LetterP\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterQ\"] = 132] = \"LetterQ\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterR\"] = 136] = \"LetterR\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterS\"] = 144] = \"LetterS\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterT\"] = 258] = \"LetterT\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterU\"] = 260] = \"LetterU\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterV\"] = 18] = \"LetterV\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterW\"] = 12] = \"LetterW\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterX\"] = 20] = \"LetterX\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterY\"] = 264] = \"LetterY\";\n    SemaphoreEncoding[SemaphoreEncoding[\"LetterZ\"] = 24] = \"LetterZ\";\n    // Numbers\n    SemaphoreEncoding[SemaphoreEncoding[\"Number1\"] = 96] = \"Number1\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number2\"] = 160] = \"Number2\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number3\"] = 288] = \"Number3\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number4\"] = 34] = \"Number4\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number5\"] = 36] = \"Number5\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number6\"] = 40] = \"Number6\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number7\"] = 48] = \"Number7\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number8\"] = 192] = \"Number8\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number9\"] = 320] = \"Number9\";\n    SemaphoreEncoding[SemaphoreEncoding[\"Number0\"] = 66] = \"Number0\";\n    // Formatting\n    SemaphoreEncoding[SemaphoreEncoding[\"FormattingNumber\"] = 6] = \"FormattingNumber\";\n})(SemaphoreEncoding = exports.SemaphoreEncoding || (exports.SemaphoreEncoding = {}));\n//# sourceMappingURL=SemaphoreEncoding.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EncodingCharacterBase {\n    constructor(data, category) {\n        this._lookup = null;\n        this._data = data;\n        this._category = category;\n        this.invalidateLookup();\n    }\n    get category() {\n        return this._category;\n    }\n    set category(value) {\n        if (this._category !== value) {\n            this._category = value;\n            this.invalidateLookup();\n        }\n    }\n    clear() {\n        this.onClear();\n        this.invalidateLookup();\n    }\n    empty() {\n        return this.onEmpty();\n    }\n    getExactMatches() {\n        return this.ensureLookup().exact;\n    }\n    getPotentialMatches() {\n        return this.ensureLookup().partial;\n    }\n    toString() {\n        return this.ensureLookup().exactString;\n    }\n    valid() {\n        return this.ensureLookup().exact.length > 0;\n    }\n    valueOf() {\n        return this.getEncoding();\n    }\n    invalidateLookup() {\n        this._lookup = null;\n    }\n    ensureLookup() {\n        if (!this._lookup) {\n            this._lookup = this._data.lookup(this.getEncoding(), this._category);\n        }\n        return this._lookup;\n    }\n}\nexports.EncodingCharacterBase = EncodingCharacterBase;\n//# sourceMappingURL=EncodingCharacterBase.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EncodingCategory_1 = require(\"./EncodingCategory\");\nconst EncodingEntry_1 = require(\"./EncodingEntry\");\nconst EncodingLookupResult_1 = require(\"./EncodingLookupResult\");\nclass EncodingDataBase {\n    constructor() {\n        this._entries = [];\n    }\n    lookup(encoding, category = EncodingCategory_1.EncodingCategory.All) {\n        const result = new EncodingLookupResult_1.EncodingLookupResult();\n        for (const entry of this._entries) {\n            if ((entry.category & category) !== 0) {\n                if (entry.encoding === encoding) {\n                    result.exact.push(entry);\n                }\n                else if ((entry.encoding & encoding) === encoding) {\n                    result.partial.push(entry);\n                }\n            }\n        }\n        return result;\n    }\n    addToList(encoding, category, display) {\n        this._entries.push(new EncodingEntry_1.EncodingEntry(encoding, category, display));\n    }\n}\nexports.EncodingDataBase = EncodingDataBase;\n//# sourceMappingURL=EncodingDataBase.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CharacterConversion_1 = require(\"../Conversion/CharacterConversion\");\nclass CaesarUtils {\n    static rotateLetter(ch, rot) {\n        if (ch.length !== 1) {\n            throw new Error('Expected a single character');\n        }\n        rot %= this.alphaLength;\n        if (rot < 0) {\n            rot += this.alphaLength;\n        }\n        const code = ch.charCodeAt(0);\n        let base = 0;\n        if (this.isLowerAlpha(code)) {\n            base = this.lowerA;\n        }\n        else if (this.isUpperAlpha(code)) {\n            base = this.upperA;\n        }\n        else {\n            return ch;\n        }\n        return String.fromCharCode(((code - base + rot) % this.alphaLength) + base);\n    }\n    static rotateLetterWithKey(ch, key, keyIndex, decrypt = false) {\n        if (key.length === 0) {\n            return ch;\n        }\n        const keyCh = this.getCharacterWithMod(key, keyIndex);\n        let rot = CharacterConversion_1.CharacterConversion.toOrdinal(keyCh) - 1;\n        if (decrypt) {\n            rot = -rot;\n        }\n        return this.rotateLetter(ch, rot);\n    }\n    static isAlpha(ch) {\n        const code = ch.charCodeAt(0);\n        return this.isUpperAlpha(code) || this.isLowerAlpha(code);\n    }\n    static getCharacterWithMod(str, index) {\n        return str.charAt(index % str.length);\n    }\n    static isUpperAlpha(code) {\n        return code >= this.upperA && code <= this.upperZ;\n    }\n    static isLowerAlpha(code) {\n        return code >= this.lowerA && code <= this.lowerZ;\n    }\n}\nexports.CaesarUtils = CaesarUtils;\nCaesarUtils.upperA = 'A'.charCodeAt(0);\nCaesarUtils.upperZ = 'Z'.charCodeAt(0);\nCaesarUtils.lowerA = 'a'.charCodeAt(0);\nCaesarUtils.lowerZ = 'z'.charCodeAt(0);\nCaesarUtils.alphaLength = 26;\n//# sourceMappingURL=CaesarUtils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass KeyedCipherStringBase {\n    constructor(text = '', key = '') {\n        this._text = text;\n        this._key = key;\n    }\n    get text() {\n        return this._text;\n    }\n    set text(value) {\n        this._text = value;\n    }\n    get key() {\n        return this._key;\n    }\n    set key(value) {\n        this._key = value;\n    }\n    encrypt() {\n        return this.convert(false);\n    }\n    decrypt() {\n        return this.convert(true);\n    }\n}\nexports.KeyedCipherStringBase = KeyedCipherStringBase;\n//# sourceMappingURL=KeyedCipherStringBase.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CharacterEncoding;\n(function (CharacterEncoding) {\n    CharacterEncoding[CharacterEncoding[\"None\"] = 0] = \"None\";\n    CharacterEncoding[CharacterEncoding[\"Latin\"] = 1] = \"Latin\";\n    CharacterEncoding[CharacterEncoding[\"Ordinal\"] = 2] = \"Ordinal\";\n    CharacterEncoding[CharacterEncoding[\"FiveBitBinary\"] = 3] = \"FiveBitBinary\";\n    CharacterEncoding[CharacterEncoding[\"EightBitBinary\"] = 4] = \"EightBitBinary\";\n    CharacterEncoding[CharacterEncoding[\"Ascii\"] = 5] = \"Ascii\";\n})(CharacterEncoding = exports.CharacterEncoding || (exports.CharacterEncoding = {}));\n//# sourceMappingURL=CharacterEncoding.js.map","\"use strict\";\n// The encoding for morse is much less straightforward than the others. The dots\n// and dashes each use two bits of the integer starting with the least-\n// significant bit.\n//\n// Example:\n//\n// 'F' -> ..-.\n//\n// Which encodes as:\n//\n// 01 01 10 01\n//  .  .  -  .\n//\n// Since it's packed starting with the LSB, the resulting number is reversed:\n//\n// 01100101 -> 0x65\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction packMorse(...args) {\n    let value = MorseEncoding.None;\n    let shift = 0;\n    for (let arg of args) {\n        arg <<= shift;\n        value |= arg;\n        shift += 2;\n    }\n    return value;\n}\nvar MorseEncoding;\n(function (MorseEncoding) {\n    MorseEncoding[MorseEncoding[\"None\"] = 0] = \"None\";\n    // Primitives\n    MorseEncoding[MorseEncoding[\"Dot\"] = 1] = \"Dot\";\n    MorseEncoding[MorseEncoding[\"Dash\"] = 2] = \"Dash\";\n    // Letters\n    MorseEncoding[MorseEncoding[\"LetterA\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterA\";\n    MorseEncoding[MorseEncoding[\"LetterB\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterB\";\n    MorseEncoding[MorseEncoding[\"LetterC\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterC\";\n    MorseEncoding[MorseEncoding[\"LetterD\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterD\";\n    MorseEncoding[MorseEncoding[\"LetterE\"] = packMorse(MorseEncoding.Dot)] = \"LetterE\";\n    MorseEncoding[MorseEncoding[\"LetterF\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterF\";\n    MorseEncoding[MorseEncoding[\"LetterG\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterG\";\n    MorseEncoding[MorseEncoding[\"LetterH\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterH\";\n    MorseEncoding[MorseEncoding[\"LetterI\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterI\";\n    MorseEncoding[MorseEncoding[\"LetterJ\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterJ\";\n    MorseEncoding[MorseEncoding[\"LetterK\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterK\";\n    MorseEncoding[MorseEncoding[\"LetterL\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterL\";\n    MorseEncoding[MorseEncoding[\"LetterM\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterM\";\n    MorseEncoding[MorseEncoding[\"LetterN\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterN\";\n    MorseEncoding[MorseEncoding[\"LetterO\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterO\";\n    MorseEncoding[MorseEncoding[\"LetterP\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterP\";\n    MorseEncoding[MorseEncoding[\"LetterQ\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterQ\";\n    MorseEncoding[MorseEncoding[\"LetterR\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"LetterR\";\n    MorseEncoding[MorseEncoding[\"LetterS\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterS\";\n    MorseEncoding[MorseEncoding[\"LetterT\"] = packMorse(MorseEncoding.Dash)] = \"LetterT\";\n    MorseEncoding[MorseEncoding[\"LetterU\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterU\";\n    MorseEncoding[MorseEncoding[\"LetterV\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterV\";\n    MorseEncoding[MorseEncoding[\"LetterW\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterW\";\n    MorseEncoding[MorseEncoding[\"LetterX\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"LetterX\";\n    MorseEncoding[MorseEncoding[\"LetterY\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"LetterY\";\n    MorseEncoding[MorseEncoding[\"LetterZ\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"LetterZ\";\n    // Numbers\n    MorseEncoding[MorseEncoding[\"Number0\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number0\";\n    MorseEncoding[MorseEncoding[\"Number1\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number1\";\n    MorseEncoding[MorseEncoding[\"Number2\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number2\";\n    MorseEncoding[MorseEncoding[\"Number3\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"Number3\";\n    MorseEncoding[MorseEncoding[\"Number4\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"Number4\";\n    MorseEncoding[MorseEncoding[\"Number5\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number5\";\n    MorseEncoding[MorseEncoding[\"Number6\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number6\";\n    MorseEncoding[MorseEncoding[\"Number7\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number7\";\n    MorseEncoding[MorseEncoding[\"Number8\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"Number8\";\n    MorseEncoding[MorseEncoding[\"Number9\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"Number9\";\n    // Punctuation\n    MorseEncoding[MorseEncoding[\"PunctuationPeriod\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationPeriod\";\n    MorseEncoding[MorseEncoding[\"PunctuationComma\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"PunctuationComma\";\n    MorseEncoding[MorseEncoding[\"PunctuationQuestionMark\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationQuestionMark\";\n    MorseEncoding[MorseEncoding[\"PunctuationApostrophe\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationApostrophe\";\n    MorseEncoding[MorseEncoding[\"PunctuationExclamationPoint\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash)] = \"PunctuationExclamationPoint\";\n    MorseEncoding[MorseEncoding[\"PunctuationForwardSlash\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationForwardSlash\";\n    MorseEncoding[MorseEncoding[\"PunctuationOpenParenthesis\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationOpenParenthesis\";\n    MorseEncoding[MorseEncoding[\"PunctuationCloseParenthesis\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationCloseParenthesis\";\n    MorseEncoding[MorseEncoding[\"PunctuationAmpersand\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationAmpersand\";\n    MorseEncoding[MorseEncoding[\"PunctuationColon\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot)] = \"PunctuationColon\";\n    MorseEncoding[MorseEncoding[\"PunctuationSemicolon\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationSemicolon\";\n    MorseEncoding[MorseEncoding[\"PunctuationDoubleDash\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationDoubleDash\";\n    MorseEncoding[MorseEncoding[\"PunctuationPlusSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationPlusSign\";\n    MorseEncoding[MorseEncoding[\"PunctuationHyphen\"] = packMorse(MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationHyphen\";\n    MorseEncoding[MorseEncoding[\"PunctuationUnderscore\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationUnderscore\";\n    MorseEncoding[MorseEncoding[\"PunctuationQuotationMark\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationQuotationMark\";\n    MorseEncoding[MorseEncoding[\"PunctuationDollarSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dot, MorseEncoding.Dash)] = \"PunctuationDollarSign\";\n    MorseEncoding[MorseEncoding[\"PunctuationAtSign\"] = packMorse(MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dash, MorseEncoding.Dot, MorseEncoding.Dash, MorseEncoding.Dot)] = \"PunctuationAtSign\";\n})(MorseEncoding = exports.MorseEncoding || (exports.MorseEncoding = {}));\n//# sourceMappingURL=MorseEncoding.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nconst EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\nconst BrailleEncoding_1 = require(\"./BrailleEncoding\");\nclass BrailleData extends EncodingDataBase_1.EncodingDataBase {\n    constructor() {\n        super();\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.FormattingNumber, EncodingCategory_1.EncodingCategory.Formatting, '#');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.FormattingCapital, EncodingCategory_1.EncodingCategory.Formatting, '^');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationComma, EncodingCategory_1.EncodingCategory.Punctuation, ',');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationSemicolon, EncodingCategory_1.EncodingCategory.Punctuation, ';');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationApostrophe, EncodingCategory_1.EncodingCategory.Punctuation, \"'\");\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationColon, EncodingCategory_1.EncodingCategory.Punctuation, ':');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationHyphen, EncodingCategory_1.EncodingCategory.Punctuation, '-');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationDecimalPoint, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationFullStop, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationExclamationPoint, EncodingCategory_1.EncodingCategory.Punctuation, '!');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationOpenQuote, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationQuestionMark, EncodingCategory_1.EncodingCategory.Punctuation, '?');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationCloseQuote, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationBracket, EncodingCategory_1.EncodingCategory.Punctuation, '(');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationBracket, EncodingCategory_1.EncodingCategory.Punctuation, ')');\n        this.addToList(BrailleEncoding_1.BrailleEncoding.PunctuationSlash, EncodingCategory_1.EncodingCategory.Punctuation, '/');\n    }\n}\nexports.BrailleData = BrailleData;\nBrailleData.instance = new BrailleData();\n//# sourceMappingURL=BrailleData.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EncodingEntry {\n    constructor(encoding, category, display) {\n        this.encoding = encoding;\n        this.category = category;\n        this.display = display;\n    }\n    toString() {\n        return this.display;\n    }\n}\nexports.EncodingEntry = EncodingEntry;\n//# sourceMappingURL=EncodingEntry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CharacterTableEntry_1 = require(\"./CharacterTableEntry\");\nclass CharacterConversion {\n    static getAsciiTable() {\n        const retVal = [];\n        CharacterConversion.addAsciiRange(retVal, 48, 57, CharacterConversion.toAscii, 127);\n        CharacterConversion.addAsciiRange(retVal, 65, 90, CharacterConversion.toAscii, 127);\n        CharacterConversion.addAsciiRange(retVal, 97, 122, CharacterConversion.toAscii, 127);\n        return retVal;\n    }\n    static getOrdinalTable() {\n        const retVal = [];\n        CharacterConversion.addAsciiRange(retVal, 65, 90, CharacterConversion.toOrdinal, 26);\n        return retVal;\n    }\n    static toAscii(ch) {\n        if (typeof ch !== 'string' || ch.length !== 1) {\n            throw new Error('A single character is required');\n        }\n        const ascii = ch.charCodeAt(0);\n        if (ascii >= 0 && ascii <= 127) {\n            return ascii;\n        }\n        return -1;\n    }\n    static toOrdinal(ch) {\n        if (typeof ch !== 'string' || ch.length !== 1) {\n            throw new Error('A single character is required');\n        }\n        const chCode = ch.charCodeAt(0);\n        let ordinalCode = chCode - 'a'.charCodeAt(0);\n        if (ordinalCode >= 0 && ordinalCode < 26) {\n            return ordinalCode + 1;\n        }\n        ordinalCode = chCode - 'A'.charCodeAt(0);\n        if (ordinalCode >= 0 && ordinalCode < 26) {\n            return ordinalCode + 1;\n        }\n        return -1;\n    }\n    static addAsciiRange(array, start, end, conversion, maxValue) {\n        for (let i = start; i <= end; i++) {\n            const letter = String.fromCharCode(i);\n            array.push(new CharacterTableEntry_1.CharacterTableEntry(letter, conversion(letter), maxValue));\n        }\n    }\n}\nexports.CharacterConversion = CharacterConversion;\n//# sourceMappingURL=CharacterConversion.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass CharacterTableEntry {\n    constructor(character, value, maxValue) {\n        this.character = character;\n        this.binary = CharacterTableEntry.getValue(value, 2, maxValue);\n        this.ternary = CharacterTableEntry.getValue(value, 3, maxValue);\n        this.octal = CharacterTableEntry.getValue(value, 8, maxValue);\n        this.decimal = CharacterTableEntry.getValue(value, 10, maxValue);\n        this.hexadecimal = CharacterTableEntry.getValue(value, 16, maxValue);\n    }\n    static getValue(value, base, maxValue) {\n        return value\n            .toString(base)\n            .padStart(Math.ceil(Math.log(maxValue) / Math.log(base)), '0');\n    }\n}\nexports.CharacterTableEntry = CharacterTableEntry;\n//# sourceMappingURL=CharacterTableEntry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass CharacterImage {\n    constructor(character, image) {\n        this.character = character;\n        this.image = image;\n    }\n}\nexports.CharacterImage = CharacterImage;\n//# sourceMappingURL=CharacterImage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass InlineSvg {\n    constructor(inlineSvg, viewBoxWidth, viewBoxHeight) {\n        this.inlineSvg = inlineSvg;\n        this.viewBoxWidth = viewBoxWidth;\n        this.viewBoxHeight = viewBoxHeight;\n    }\n    render() {\n        return `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"100%\" height=\"100%\" viewBox=\"0 0 ${this.viewBoxWidth} ${this.viewBoxHeight}\">${this.inlineSvg}</svg>`;\n    }\n}\nexports.InlineSvg = InlineSvg;\n//# sourceMappingURL=InlineSvg.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CharacterEncoding_1 = require(\"./CharacterEncoding\");\nclass CharacterAutoConvert {\n    // Forced encoding can be useful when converting an entire string\n    // or simply dealing with binary which has no leading zeros\n    static convertCharacter(input, forcedCharacterEncoding) {\n        let encoding = null;\n        if (!forcedCharacterEncoding) {\n            encoding = this.determineCharacterEncoding(input);\n        }\n        else {\n            encoding = forcedCharacterEncoding;\n        }\n        if (encoding === CharacterEncoding_1.CharacterEncoding.None) {\n            return '';\n        }\n        // Assume that Latin characters should remain\n        if (encoding === CharacterEncoding_1.CharacterEncoding.Latin) {\n            return input;\n        }\n        const baseTen = Number.parseInt(input, 10);\n        if (encoding === CharacterEncoding_1.CharacterEncoding.Ascii) {\n            return CharacterAutoConvert.asciiPrintable(baseTen);\n        }\n        const asciiOffset = 64;\n        if (encoding === CharacterEncoding_1.CharacterEncoding.Ordinal) {\n            return CharacterAutoConvert.asciiPrintable(baseTen + asciiOffset);\n        }\n        const binary = Number.parseInt(input, 2);\n        if (encoding === CharacterEncoding_1.CharacterEncoding.FiveBitBinary &&\n            this.appearsBinary(input)) {\n            return CharacterAutoConvert.asciiPrintable(binary + asciiOffset);\n        }\n        if (encoding === CharacterEncoding_1.CharacterEncoding.EightBitBinary &&\n            this.appearsBinary(input)) {\n            return CharacterAutoConvert.asciiPrintable(binary);\n        }\n        return '';\n    }\n    static asciiPrintable(index) {\n        if (index < 32 || index > 126) {\n            return '';\n        }\n        return String.fromCharCode(index);\n    }\n    static determineCharacterEncoding(input) {\n        if (input.match(/[a-z]/i)) {\n            return CharacterEncoding_1.CharacterEncoding.Latin;\n        }\n        const numeric = Number.parseInt(input, 10);\n        if (this.appearsBinary(input)) {\n            if (input.length === 5) {\n                return CharacterEncoding_1.CharacterEncoding.FiveBitBinary;\n            }\n            else if (input.length === 8 || input.length === 7) {\n                return CharacterEncoding_1.CharacterEncoding.EightBitBinary;\n            }\n        }\n        if (input.length < 3 && numeric > 0 && numeric < 27) {\n            return CharacterEncoding_1.CharacterEncoding.Ordinal;\n        }\n        if (numeric > 64 && numeric < 91) {\n            return CharacterEncoding_1.CharacterEncoding.Ascii;\n        }\n        if (numeric > 97 && numeric < 123) {\n            return CharacterEncoding_1.CharacterEncoding.Ascii;\n        }\n        return CharacterEncoding_1.CharacterEncoding.None;\n    }\n    static appearsBinary(character) {\n        for (const letter of character) {\n            if (letter !== '0' && letter !== '1') {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.CharacterAutoConvert = CharacterAutoConvert;\n//# sourceMappingURL=CharacterAutoConvert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nconst EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\nconst Helpers_1 = require(\"../Common/Helpers\");\nconst MorseData_1 = require(\"./MorseData\");\nconst MorseEncoding_1 = require(\"./MorseEncoding\");\nconst MORSE_BITMASK = MorseEncoding_1.MorseEncoding.Dot | MorseEncoding_1.MorseEncoding.Dash;\nclass MorseCharacter extends EncodingCharacterBase_1.EncodingCharacterBase {\n    constructor(str = '', category = EncodingCategory_1.EncodingCategory.All) {\n        super(MorseData_1.MorseData.instance, category);\n        this._morse = str;\n    }\n    static toMorseString(encoding) {\n        let morseChars = '';\n        while (encoding !== MorseEncoding_1.MorseEncoding.None) {\n            if ((encoding & MORSE_BITMASK) === MorseEncoding_1.MorseEncoding.Dot) {\n                morseChars += MorseCharacter.DOT;\n            }\n            else if ((encoding & MORSE_BITMASK) === MorseEncoding_1.MorseEncoding.Dash) {\n                morseChars += MorseCharacter.DASH;\n            }\n            else {\n                throw new Error('Invalid morse bits');\n            }\n            encoding >>>= 2;\n        }\n        return morseChars;\n    }\n    static parseMorseString(morse) {\n        let bits = MorseEncoding_1.MorseEncoding.None;\n        for (let i = morse.length - 1; i >= 0; i--) {\n            const ch = morse[i];\n            if (ch === MorseCharacter.DOT) {\n                bits |= MorseEncoding_1.MorseEncoding.Dot;\n            }\n            else if (ch === MorseCharacter.DASH) {\n                bits |= MorseEncoding_1.MorseEncoding.Dash;\n            }\n            else {\n                throw new Error('Invalid morse character');\n            }\n            bits <<= 2;\n        }\n        bits >>>= 2;\n        return bits;\n    }\n    get morseString() {\n        return this._morse;\n    }\n    set morseString(value) {\n        this._morse = value;\n        this.invalidateLookup();\n    }\n    backspace() {\n        if (this._morse.length > 0) {\n            this._morse = this._morse.substring(0, this._morse.length - 1);\n            this.invalidateLookup();\n        }\n    }\n    dot() {\n        this._morse += MorseCharacter.DOT;\n        this.invalidateLookup();\n    }\n    dash() {\n        this._morse += MorseCharacter.DASH;\n        this.invalidateLookup();\n    }\n    invertDotsAndDashes() {\n        // Replace dots with a placeholder, dashes with dots, then placeholders with dashes\n        Helpers_1.Helpers.assert(this._morse.indexOf(MorseCharacter.RESERVED_DIVIDER) < 0);\n        this._morse = this._morse\n            .replace(/\\./g, 'A')\n            .replace(/-/g, MorseCharacter.DOT)\n            .replace(/A/g, MorseCharacter.DASH);\n    }\n    reverse() {\n        this._morse = this._morse.split('').reverse().join('');\n    }\n    onClear() {\n        this._morse = '';\n        this.invalidateLookup();\n    }\n    onEmpty() {\n        return this._morse.length === 0;\n    }\n    getEncoding() {\n        return MorseCharacter.parseMorseString(this._morse);\n    }\n}\nexports.MorseCharacter = MorseCharacter;\nMorseCharacter.DOT = '.';\nMorseCharacter.DASH = '-';\n// Character which may not appear in morse and is reserved for use by this class\nMorseCharacter.RESERVED_DIVIDER = 'A';\n//# sourceMappingURL=MorseCharacter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Helpers {\n    static assert(condition) {\n        if (!condition) {\n            throw new Error();\n        }\n    }\n    static assertMsg(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n}\nexports.Helpers = Helpers;\n//# sourceMappingURL=Helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass NatoCharacter {\n    constructor(character, word) {\n        this.character = character;\n        this.word = word;\n    }\n}\nexports.NatoCharacter = NatoCharacter;\n//# sourceMappingURL=NatoCharacter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ResistorColorEntry {\n    constructor(name, colorCode, multiplier, value, toleranceInPercent) {\n        this.name = name;\n        this.value = value;\n        this.colorCode = colorCode;\n        this.multiplier = multiplier;\n        this.toleranceInPercent = toleranceInPercent;\n    }\n    hasValue() {\n        return this.value !== undefined;\n    }\n    getDisplayValue() {\n        if (this.value === undefined) {\n            return '';\n        }\n        return this.value.toString();\n    }\n    hasTolerance() {\n        return this.toleranceInPercent !== undefined;\n    }\n    getDisplayTolerance() {\n        if (this.toleranceInPercent === undefined) {\n            return '';\n        }\n        return `${this.toleranceInPercent}%`;\n    }\n}\nexports.ResistorColorEntry = ResistorColorEntry;\n//# sourceMappingURL=ResistorColorEntry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nconst EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\nconst SemaphoreEncoding_1 = require(\"./SemaphoreEncoding\");\nclass SemaphoreData extends EncodingDataBase_1.EncodingDataBase {\n    constructor() {\n        super();\n        // Letters\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z');\n        // Numbers\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n        // Formatting\n        this.addToList(SemaphoreEncoding_1.SemaphoreEncoding.FormattingNumber, EncodingCategory_1.EncodingCategory.Formatting, '#');\n    }\n}\nexports.SemaphoreData = SemaphoreData;\nSemaphoreData.instance = new SemaphoreData();\n//# sourceMappingURL=SemaphoreData.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SemaphoreDirection_1 = require(\"./SemaphoreDirection\");\nclass SemaphoreDegrees {\n    static FromDegrees(degrees) {\n        if (degrees >= 360) {\n            degrees = degrees % 360;\n        }\n        if (degrees % 45 !== 0 || degrees < 0) {\n            throw new Error('Invalid degrees');\n        }\n        const position = degrees / 45;\n        return SemaphoreDirection_1.SemaphoreDirection.North << position;\n    }\n    static ToDegrees(direction) {\n        let position = SemaphoreDirection_1.SemaphoreDirection.North;\n        let counter = 0;\n        while (counter < 9 && position !== direction) {\n            position = position << 1;\n            counter++;\n        }\n        return counter * 45;\n    }\n}\nexports.SemaphoreDegrees = SemaphoreDegrees;\n//# sourceMappingURL=SemaphoreDegrees.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SemaphoreDirection;\n(function (SemaphoreDirection) {\n    SemaphoreDirection[SemaphoreDirection[\"None\"] = 0] = \"None\";\n    SemaphoreDirection[SemaphoreDirection[\"North\"] = 2] = \"North\";\n    SemaphoreDirection[SemaphoreDirection[\"NorthEast\"] = 4] = \"NorthEast\";\n    SemaphoreDirection[SemaphoreDirection[\"East\"] = 8] = \"East\";\n    SemaphoreDirection[SemaphoreDirection[\"SouthEast\"] = 16] = \"SouthEast\";\n    SemaphoreDirection[SemaphoreDirection[\"South\"] = 32] = \"South\";\n    SemaphoreDirection[SemaphoreDirection[\"SouthWest\"] = 64] = \"SouthWest\";\n    SemaphoreDirection[SemaphoreDirection[\"West\"] = 128] = \"West\";\n    SemaphoreDirection[SemaphoreDirection[\"NorthWest\"] = 256] = \"NorthWest\";\n})(SemaphoreDirection = exports.SemaphoreDirection || (exports.SemaphoreDirection = {}));\n//# sourceMappingURL=SemaphoreDirection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Result {\n    constructor(word, wordPoints) {\n        this.word = word;\n        this.points = Array.from(wordPoints);\n    }\n}\nexports.Result = Result;\n//# sourceMappingURL=Result.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WordSearchDirection;\n(function (WordSearchDirection) {\n    WordSearchDirection[WordSearchDirection[\"None\"] = 0] = \"None\";\n    WordSearchDirection[WordSearchDirection[\"Cardinal\"] = 1] = \"Cardinal\";\n    WordSearchDirection[WordSearchDirection[\"Diagonal\"] = 2] = \"Diagonal\";\n    WordSearchDirection[WordSearchDirection[\"CardinalAndDiagonal\"] = 3] = \"CardinalAndDiagonal\";\n})(WordSearchDirection = exports.WordSearchDirection || (exports.WordSearchDirection = {}));\n//# sourceMappingURL=WordSearchDirection.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = append;\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction append(trie, letter, index, array) {\n  var isEndWordLetter = letter === _config2.default.END_WORD;\n  var isLastLetter = index === array.length - 1;\n\n  if (isEndWordLetter && !isLastLetter) {\n    trie[_config2.default.END_WORD] = 1;\n    trie[_config2.default.END_WORD_REPLACER] = {};\n    trie = trie[_config2.default.END_WORD_REPLACER];\n  } else {\n    trie[letter] = trie[letter] || {};\n    trie = trie[letter];\n  }\n\n  if (isLastLetter) {\n    trie[_config2.default.END_WORD] = 1;\n  }\n\n  return trie;\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  objectCopy: function objectCopy(obj) {\n    if (typeof obj === 'undefined') {\n      return {};\n    }\n    return JSON.parse(JSON.stringify(obj));\n  },\n  stringify: function stringify(obj) {\n    var spacer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n    if (typeof obj === 'undefined') {\n      return '';\n    }\n    return JSON.stringify(obj, null, spacer);\n  }\n};\nmodule.exports = exports['default'];","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nconst EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\nconst BrailleData_1 = require(\"./BrailleData\");\nconst BrailleEncoding_1 = require(\"./BrailleEncoding\");\nclass BrailleCharacter extends EncodingCharacterBase_1.EncodingCharacterBase {\n    constructor(encoding = BrailleEncoding_1.BrailleEncoding.None, category = EncodingCategory_1.EncodingCategory.All) {\n        super(BrailleData_1.BrailleData.instance, category);\n        this._encoding = encoding;\n    }\n    get encoding() {\n        return this._encoding;\n    }\n    set encoding(value) {\n        this._encoding = value;\n        this.invalidateLookup();\n    }\n    get(mask) {\n        return (this._encoding & mask) === mask;\n    }\n    toggle(mask) {\n        this._encoding ^= mask;\n        this.invalidateLookup();\n    }\n    onClear() {\n        this._encoding = BrailleEncoding_1.BrailleEncoding.None;\n        this.invalidateLookup();\n    }\n    onEmpty() {\n        return this._encoding === BrailleEncoding_1.BrailleEncoding.None;\n    }\n    getEncoding() {\n        return this._encoding;\n    }\n}\nexports.BrailleCharacter = BrailleCharacter;\n//# sourceMappingURL=BrailleCharacter.js.map","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EncodingLookupResult {\n    constructor() {\n        this.exact = [];\n        this.partial = [];\n    }\n    get exactString() {\n        return this.exact.map(value => value.toString()).join('/');\n    }\n}\nexports.EncodingLookupResult = EncodingLookupResult;\n//# sourceMappingURL=EncodingLookupResult.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrailleDot;\n(function (BrailleDot) {\n    BrailleDot[BrailleDot[\"None\"] = 0] = \"None\";\n    BrailleDot[BrailleDot[\"UpperLeft\"] = 1] = \"UpperLeft\";\n    BrailleDot[BrailleDot[\"MiddleLeft\"] = 2] = \"MiddleLeft\";\n    BrailleDot[BrailleDot[\"LowerLeft\"] = 4] = \"LowerLeft\";\n    BrailleDot[BrailleDot[\"UpperRight\"] = 8] = \"UpperRight\";\n    BrailleDot[BrailleDot[\"MiddleRight\"] = 16] = \"MiddleRight\";\n    BrailleDot[BrailleDot[\"LowerRight\"] = 32] = \"LowerRight\";\n})(BrailleDot = exports.BrailleDot || (exports.BrailleDot = {}));\n//# sourceMappingURL=BrailleDot.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nconst BrailleData_1 = require(\"./BrailleData\");\nconst BrailleEncoding_1 = require(\"./BrailleEncoding\");\nclass BrailleStream {\n    constructor(chars) {\n        this._chars = [];\n        this._currentStr = '';\n        this._processPosition = 0;\n        this._numberMode = false;\n        if (chars) {\n            this._chars = Array.from(chars);\n        }\n        this.invalidate();\n    }\n    get chars() {\n        return this._chars;\n    }\n    set chars(value) {\n        this.clear();\n        for (const ch of value) {\n            this._chars.push(ch);\n        }\n    }\n    append(ch) {\n        this._chars.push(ch.valueOf());\n    }\n    clear() {\n        this._chars.length = 0;\n        this.invalidate();\n    }\n    backspace() {\n        this._chars.pop();\n        this.invalidate();\n    }\n    space() {\n        this._chars.push(BrailleEncoding_1.BrailleEncoding.None);\n    }\n    toString() {\n        this.update();\n        return this._currentStr;\n    }\n    invalidate() {\n        this._currentStr = '';\n        this._processPosition = 0;\n        this._numberMode = false;\n    }\n    update() {\n        while (this._processPosition < this._chars.length) {\n            const ch = this._chars[this._processPosition];\n            if (ch === BrailleEncoding_1.BrailleEncoding.None) {\n                this._numberMode = false;\n                this._currentStr += ' ';\n            }\n            else if (ch === BrailleEncoding_1.BrailleEncoding.FormattingNumber) {\n                this._numberMode = true;\n                this._currentStr += '#';\n            }\n            else {\n                const category = EncodingCategory_1.EncodingCategory.Punctuation |\n                    (this._numberMode\n                        ? EncodingCategory_1.EncodingCategory.Number\n                        : EncodingCategory_1.EncodingCategory.Letter);\n                const exact = BrailleData_1.BrailleData.instance.lookup(ch, category).exact;\n                if (exact.length > 0) {\n                    this._currentStr += exact[0].toString();\n                }\n            }\n            this._processPosition++;\n        }\n    }\n}\nexports.BrailleStream = BrailleStream;\n//# sourceMappingURL=BrailleStream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CaesarUtils_1 = require(\"./CaesarUtils\");\nconst KeyedCipherStringBase_1 = require(\"./KeyedCipherStringBase\");\nclass AutoKeyString extends KeyedCipherStringBase_1.KeyedCipherStringBase {\n    convert(decrypt) {\n        if (this._key.length < 1) {\n            return this._text;\n        }\n        else {\n            const rotStr = [];\n            let keyIndex = 0;\n            let fullKey = this._key;\n            for (const ch of this._text) {\n                if (CaesarUtils_1.CaesarUtils.isAlpha(ch)) {\n                    const currentLetter = CaesarUtils_1.CaesarUtils.rotateLetterWithKey(ch, fullKey, keyIndex++, decrypt);\n                    rotStr.push(currentLetter);\n                    if (decrypt) {\n                        fullKey += currentLetter;\n                    }\n                    else {\n                        fullKey += ch;\n                    }\n                }\n                else {\n                    rotStr.push(ch);\n                }\n            }\n            return rotStr.join('');\n        }\n    }\n}\nexports.AutoKeyString = AutoKeyString;\n//# sourceMappingURL=AutoKeyString.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CaesarUtils_1 = require(\"./CaesarUtils\");\nclass CaesarString {\n    constructor(text = '') {\n        this._text = text;\n    }\n    get text() {\n        return this._text;\n    }\n    set text(value) {\n        this._text = value;\n    }\n    getRotation(rot) {\n        const rotStr = [];\n        for (const ch of this._text) {\n            rotStr.push(CaesarUtils_1.CaesarUtils.rotateLetter(ch, rot));\n        }\n        return rotStr.join('');\n    }\n    getRotations() {\n        const rotations = [];\n        rotations.push(this._text);\n        for (let i = 1; i < 26; i++) {\n            rotations.push(this.getRotation(i));\n        }\n        return rotations;\n    }\n}\nexports.CaesarString = CaesarString;\n//# sourceMappingURL=CaesarString.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CaesarUtils_1 = require(\"./CaesarUtils\");\nconst KeyedCipherStringBase_1 = require(\"./KeyedCipherStringBase\");\nclass VigenereString extends KeyedCipherStringBase_1.KeyedCipherStringBase {\n    convert(decrypt) {\n        const rotStr = [];\n        let keyIndex = 0;\n        for (const ch of this._text) {\n            if (CaesarUtils_1.CaesarUtils.isAlpha(ch)) {\n                rotStr.push(CaesarUtils_1.CaesarUtils.rotateLetterWithKey(ch, this._key, keyIndex++, decrypt));\n            }\n            else {\n                rotStr.push(ch);\n            }\n        }\n        return rotStr.join('');\n    }\n}\nexports.VigenereString = VigenereString;\n//# sourceMappingURL=VigenereString.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SignificantFigures {\n    static ceil(num, sigFigs) {\n        return this.roundInternal(Math.ceil, num, sigFigs);\n    }\n    static floor(num, sigFigs) {\n        return this.roundInternal(Math.floor, num, sigFigs);\n    }\n    static round(num, sigFigs) {\n        return this.roundInternal(Math.round, num, sigFigs);\n    }\n    static roundInternal(func, num, sigFigs) {\n        if (num === 0) {\n            return num;\n        }\n        if (sigFigs <= 0) {\n            throw new RangeError('sigFigs value must be positive');\n        }\n        const factor = this.getFactor(num, sigFigs);\n        if (factor > 0) {\n            return func(num / factor) * factor;\n        }\n        else if (factor < 0) {\n            const absFactor = Math.abs(factor);\n            return func(num * absFactor) / absFactor;\n        }\n        else {\n            return num;\n        }\n    }\n    static getFactor(num, sigFigs) {\n        const absNum = Math.abs(num);\n        let digits = 0;\n        if (absNum < 1) {\n            digits = -sigFigs;\n        }\n        else {\n            digits = Math.ceil(Math.log(absNum) / Math.log(10)) - sigFigs;\n        }\n        if (digits < 0) {\n            return -Math.pow(10, Math.abs(digits));\n        }\n        else {\n            return Math.pow(10, digits);\n        }\n    }\n}\nexports.SignificantFigures = SignificantFigures;\n//# sourceMappingURL=SignificantFigures.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CharacterAutoConvert_1 = require(\"./CharacterAutoConvert\");\nconst CharacterEncoding_1 = require(\"./CharacterEncoding\");\nclass StringAutoConvert {\n    static convertString(input, homogeneous) {\n        const split = this.splitString(input);\n        if (homogeneous) {\n            const encoding = this.determineStringEncoding(input);\n            return split.reduce((result, letter) => result + CharacterAutoConvert_1.CharacterAutoConvert.convertCharacter(letter, encoding), '');\n        }\n        else {\n            return split.reduce((result, letter) => result + CharacterAutoConvert_1.CharacterAutoConvert.convertCharacter(letter), '');\n        }\n    }\n    static determineStringEncoding(input) {\n        const encodingCount = {};\n        const parsed = this.splitString(input);\n        const encodingKeys = [];\n        for (const letter of parsed) {\n            const charEncoding = CharacterAutoConvert_1.CharacterAutoConvert.determineCharacterEncoding(letter);\n            if (!encodingCount[charEncoding]) {\n                encodingCount[charEncoding] = 1;\n                encodingKeys.push(charEncoding);\n            }\n            else {\n                encodingCount[charEncoding] = encodingCount[charEncoding] + 1;\n            }\n        }\n        let maxCount = 0;\n        let maxEncoding;\n        maxEncoding = CharacterEncoding_1.CharacterEncoding.None;\n        for (const encoding of encodingKeys) {\n            if (encodingCount[encoding] > maxCount) {\n                maxCount = encodingCount[encoding];\n                maxEncoding = encoding;\n            }\n        }\n        return maxEncoding;\n    }\n    static splitString(input) {\n        return input.split(' ').filter(item => item !== '');\n    }\n}\nexports.StringAutoConvert = StringAutoConvert;\n//# sourceMappingURL=StringAutoConvert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nconst EncodingDataBase_1 = require(\"../Common/EncodingDataBase\");\nconst MorseEncoding_1 = require(\"./MorseEncoding\");\nclass MorseData extends EncodingDataBase_1.EncodingDataBase {\n    constructor() {\n        super();\n        // Letters\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterA, EncodingCategory_1.EncodingCategory.Letter, 'A');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterB, EncodingCategory_1.EncodingCategory.Letter, 'B');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterC, EncodingCategory_1.EncodingCategory.Letter, 'C');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterD, EncodingCategory_1.EncodingCategory.Letter, 'D');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterE, EncodingCategory_1.EncodingCategory.Letter, 'E');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterF, EncodingCategory_1.EncodingCategory.Letter, 'F');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterG, EncodingCategory_1.EncodingCategory.Letter, 'G');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterH, EncodingCategory_1.EncodingCategory.Letter, 'H');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterI, EncodingCategory_1.EncodingCategory.Letter, 'I');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterJ, EncodingCategory_1.EncodingCategory.Letter, 'J');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterK, EncodingCategory_1.EncodingCategory.Letter, 'K');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterL, EncodingCategory_1.EncodingCategory.Letter, 'L');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterM, EncodingCategory_1.EncodingCategory.Letter, 'M');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterN, EncodingCategory_1.EncodingCategory.Letter, 'N');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterO, EncodingCategory_1.EncodingCategory.Letter, 'O');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterP, EncodingCategory_1.EncodingCategory.Letter, 'P');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterQ, EncodingCategory_1.EncodingCategory.Letter, 'Q');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterR, EncodingCategory_1.EncodingCategory.Letter, 'R');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterS, EncodingCategory_1.EncodingCategory.Letter, 'S');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterT, EncodingCategory_1.EncodingCategory.Letter, 'T');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterU, EncodingCategory_1.EncodingCategory.Letter, 'U');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterV, EncodingCategory_1.EncodingCategory.Letter, 'V');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterW, EncodingCategory_1.EncodingCategory.Letter, 'W');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterX, EncodingCategory_1.EncodingCategory.Letter, 'X');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterY, EncodingCategory_1.EncodingCategory.Letter, 'Y');\n        this.addToList(MorseEncoding_1.MorseEncoding.LetterZ, EncodingCategory_1.EncodingCategory.Letter, 'Z');\n        // Numbers\n        this.addToList(MorseEncoding_1.MorseEncoding.Number0, EncodingCategory_1.EncodingCategory.Number, '0');\n        this.addToList(MorseEncoding_1.MorseEncoding.Number1, EncodingCategory_1.EncodingCategory.Number, '1');\n        this.addToList(MorseEncoding_1.MorseEncoding.Number2, EncodingCategory_1.EncodingCategory.Number, '2');\n        this.addToList(MorseEncoding_1.MorseEncoding.Number3, EncodingCategory_1.EncodingCategory.Number, '3');\n        this.addToList(MorseEncoding_1.MorseEncoding.Number4, EncodingCategory_1.EncodingCategory.Number, '4');\n        this.addToList(MorseEncoding_1.MorseEncoding.Number5, EncodingCategory_1.EncodingCategory.Number, '5');\n        this.addToList(MorseEncoding_1.MorseEncoding.Number6, EncodingCategory_1.EncodingCategory.Number, '6');\n        this.addToList(MorseEncoding_1.MorseEncoding.Number7, EncodingCategory_1.EncodingCategory.Number, '7');\n        this.addToList(MorseEncoding_1.MorseEncoding.Number8, EncodingCategory_1.EncodingCategory.Number, '8');\n        this.addToList(MorseEncoding_1.MorseEncoding.Number9, EncodingCategory_1.EncodingCategory.Number, '9');\n        // Punctuation\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationPeriod, EncodingCategory_1.EncodingCategory.Punctuation, '.');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationComma, EncodingCategory_1.EncodingCategory.Punctuation, ',');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationQuestionMark, EncodingCategory_1.EncodingCategory.Punctuation, '?');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationApostrophe, EncodingCategory_1.EncodingCategory.Punctuation, \"'\");\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationExclamationPoint, EncodingCategory_1.EncodingCategory.Punctuation, '!');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationForwardSlash, EncodingCategory_1.EncodingCategory.Punctuation, '/');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationOpenParenthesis, EncodingCategory_1.EncodingCategory.Punctuation, '(');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationCloseParenthesis, EncodingCategory_1.EncodingCategory.Punctuation, ')');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationAmpersand, EncodingCategory_1.EncodingCategory.Punctuation, '&');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationColon, EncodingCategory_1.EncodingCategory.Punctuation, ':');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationSemicolon, EncodingCategory_1.EncodingCategory.Punctuation, ';');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationDoubleDash, EncodingCategory_1.EncodingCategory.Punctuation, '=');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationPlusSign, EncodingCategory_1.EncodingCategory.Punctuation, '+');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationHyphen, EncodingCategory_1.EncodingCategory.Punctuation, '-');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationUnderscore, EncodingCategory_1.EncodingCategory.Punctuation, '_');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationQuotationMark, EncodingCategory_1.EncodingCategory.Punctuation, '\"');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationDollarSign, EncodingCategory_1.EncodingCategory.Punctuation, '$');\n        this.addToList(MorseEncoding_1.MorseEncoding.PunctuationAtSign, EncodingCategory_1.EncodingCategory.Punctuation, '@');\n    }\n}\nexports.MorseData = MorseData;\nMorseData.instance = new MorseData();\n//# sourceMappingURL=MorseData.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Helpers_1 = require(\"../Common/Helpers\");\nconst MorseCharacter_1 = require(\"./MorseCharacter\");\n// MorseString represents a string of multiple morse characters.  It allows for a longer representation\n// to be converted to a single string and allows for sentence-level transforms such as reversing\n// the order of tokens.\nclass MorseString {\n    constructor(morse = '', characterDivider = MorseString.CHARACTER_DIVIDER, wordDivider = MorseString.WORD_DIVIDER) {\n        // The dividers should be single characters which don't clash with the other string content\n        Helpers_1.Helpers.assertMsg(characterDivider.length === 1, 'Divider must be a single character');\n        Helpers_1.Helpers.assertMsg(wordDivider.length === 1, 'Divider must be a single character');\n        Helpers_1.Helpers.assertMsg(characterDivider !== wordDivider, 'Dividers must be different from each other');\n        Helpers_1.Helpers.assertMsg(characterDivider !== MorseCharacter_1.MorseCharacter.DASH, 'Character divider must not be a reserved value');\n        Helpers_1.Helpers.assertMsg(characterDivider !== MorseCharacter_1.MorseCharacter.DOT, 'Character divider must not be a reserved value');\n        Helpers_1.Helpers.assertMsg(characterDivider !== MorseCharacter_1.MorseCharacter.RESERVED_DIVIDER, 'Character divider must not be a reserved value');\n        Helpers_1.Helpers.assertMsg(wordDivider !== MorseCharacter_1.MorseCharacter.DASH, 'Word divider must not be a reserved value');\n        Helpers_1.Helpers.assertMsg(wordDivider !== MorseCharacter_1.MorseCharacter.DOT, 'Word divider must not be a reserved value');\n        Helpers_1.Helpers.assertMsg(wordDivider !== MorseCharacter_1.MorseCharacter.RESERVED_DIVIDER, 'Word divider must not be a reserved value');\n        const words = morse.split(wordDivider).filter(w => w.length > 0);\n        // Discard any empty characters (caused by trailing separator)\n        const wordCharacters = words.map(w => w.split(characterDivider).filter(wc => wc.length > 0));\n        this._words = wordCharacters.map(subarray => subarray.map(wc => new MorseCharacter_1.MorseCharacter(wc)));\n    }\n    // reverse reverses the order of all tokens in the string (including separators), such as would be\n    // the case if you were reading the data for a puzzle backwards.\n    reverse() {\n        for (let i = 0; i < this._words.length; i++) {\n            for (const c of this._words[i]) {\n                // Reverse the dots/dashes in each letter\n                c.reverse();\n            }\n            // Reverse the letters in each word\n            this._words[i] = this._words[i].reverse();\n        }\n        // Reverse the order of the words\n        this._words = this._words.reverse();\n        return this;\n    }\n    // invertDotsAndDashes switches all dots and dashes in the input, such as would be the case if\n    // you had two ambiguous symbols for dot/dash and selected the wrong mapping.\n    invertDotsAndDashes() {\n        for (const word of this._words) {\n            for (const c of word) {\n                c.invertDotsAndDashes();\n            }\n        }\n        return this;\n    }\n    toString() {\n        let s = '';\n        for (let i = 0; i < this._words.length; i++) {\n            if (i > 0) {\n                s += ' '; // This is a new word\n            }\n            for (const c of this._words[i]) {\n                s += c.toString() || '?';\n            }\n        }\n        return s;\n    }\n}\nexports.MorseString = MorseString;\nMorseString.CHARACTER_DIVIDER = '/';\nMorseString.WORD_DIVIDER = ' ';\n//# sourceMappingURL=MorseString.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst NatoCharacter_1 = require(\"./NatoCharacter\");\n// There's no concept of a 'partial match' for a NATO letter, so there's no\n// reason to derive from EncodingDataBase.\nclass NatoData {\n    constructor() {\n        this._entries = [\n            new NatoCharacter_1.NatoCharacter('A', 'Alfa'),\n            new NatoCharacter_1.NatoCharacter('B', 'Bravo'),\n            new NatoCharacter_1.NatoCharacter('C', 'Charlie'),\n            new NatoCharacter_1.NatoCharacter('D', 'Delta'),\n            new NatoCharacter_1.NatoCharacter('E', 'Echo'),\n            new NatoCharacter_1.NatoCharacter('F', 'Foxtrot'),\n            new NatoCharacter_1.NatoCharacter('G', 'Golf'),\n            new NatoCharacter_1.NatoCharacter('H', 'Hotel'),\n            new NatoCharacter_1.NatoCharacter('I', 'India'),\n            new NatoCharacter_1.NatoCharacter('J', 'Juliet'),\n            new NatoCharacter_1.NatoCharacter('K', 'Kilo'),\n            new NatoCharacter_1.NatoCharacter('L', 'Lima'),\n            new NatoCharacter_1.NatoCharacter('M', 'Mike'),\n            new NatoCharacter_1.NatoCharacter('N', 'November'),\n            new NatoCharacter_1.NatoCharacter('O', 'Oscar'),\n            new NatoCharacter_1.NatoCharacter('P', 'Papa'),\n            new NatoCharacter_1.NatoCharacter('Q', 'Quebec'),\n            new NatoCharacter_1.NatoCharacter('R', 'Romeo'),\n            new NatoCharacter_1.NatoCharacter('S', 'Sierra'),\n            new NatoCharacter_1.NatoCharacter('T', 'Tango'),\n            new NatoCharacter_1.NatoCharacter('U', 'Uniform'),\n            new NatoCharacter_1.NatoCharacter('V', 'Victor'),\n            new NatoCharacter_1.NatoCharacter('W', 'Whiskey'),\n            new NatoCharacter_1.NatoCharacter('X', 'X-ray'),\n            new NatoCharacter_1.NatoCharacter('Y', 'Yankee'),\n            new NatoCharacter_1.NatoCharacter('Z', 'Zulu'),\n        ];\n    }\n    get entries() {\n        return this._entries;\n    }\n    lookup(letter) {\n        for (const ch of this._entries) {\n            if (ch.character.toUpperCase() === letter.toUpperCase()) {\n                return ch;\n            }\n        }\n        return null;\n    }\n}\nexports.NatoData = NatoData;\nNatoData.instance = new NatoData();\n//# sourceMappingURL=NatoData.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CharacterImage_1 = require(\"../Common/CharacterImage\");\nconst InlineSvg_1 = require(\"../Common/InlineSvg\");\nclass NavalFlags {\n    constructor() {\n        this._entries = [\n            // tslint:disable:max-line-length (SVG images are messy)\n            new CharacterImage_1.CharacterImage('A', new InlineSvg_1.InlineSvg(`<path d=\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\" fill=\"#000094\"/>\n      <rect x=\"18\" y=\"18\" width=\"72\" height=\"144\" fill=\"#fff\"/>\n      <path d=\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('B', new InlineSvg_1.InlineSvg('<path d=\"M 18,18 H 162 L 126,90 L 162,162 H 18 z\" fill=\"#f00\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>', 180, 180)),\n            new CharacterImage_1.CharacterImage('C', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#000094\"/>\n      <rect x=\"18\" y=\"46.8\" width=\"144\" height=\"86.4\" fill=\"#fff\"/>\n      <rect x=\"18\" y=\"75.6\" width=\"144\" height=\"28.8\" fill=\"#f00\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('D', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#fc0\"/>\n      <rect x=\"18\" y=\"54\" width=\"144\" height=\"72\" fill=\"#000094\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('E', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#000094\"/>\n      <rect x=\"18\" y=\"90\" width=\"144\" height=\"72\" fill=\"#f00\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('F', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#fff\"/>\n      <path d=\"M 90,18 l 72,72 l -72,72 l -72,-72 z\" fill=\"#f00\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('G', new InlineSvg_1.InlineSvg(`<path fill=\"#000094\" d=\"m18,18h144v144H18\"/>\n      <path stroke=\"#FC0\" stroke-width=\"24\" d=\"m30,18v144m48,0V18m48,0v144\"/>\n      <path d=\"M18,18H162V162H18z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('H', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#f00\"/>\n      <rect x=\"18\" y=\"18\" width=\"72\" height=\"144\" fill=\"#fff\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('I', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#fc0\"/>\n      <circle cx=\"90\" cy=\"90\" r=\"36\" fill=\"#000\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('J', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#000094\"/>\n      <rect x=\"18\" y=\"66\" width=\"144\" height=\"48\" fill=\"#fff\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('K', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#000094\"/>\n      <rect x=\"18\" y=\"18\" width=\"72\" height=\"144\" fill=\"#fc0\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('L', new InlineSvg_1.InlineSvg(`<rect x=\"16\" y=\"16\" width=\"148\" height=\"148\" rx=\"2\"/>\n      <path fill=\"#FC0\" d=\"m20,20h70v140h70V90H20\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('M', new InlineSvg_1.InlineSvg(`<clipPath id=\"c\">\n      <path d=\"M 18,18 H 162 V 162 H 18 z\"/>\n      </clipPath>\n      <rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#000094\"/>\n      <path d=\"M 18,18 L 162,162 M 162,18 L 18,162\" clip-path=\"url(#c)\" stroke=\"#fff\" stroke-width=\"28.8\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('N', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#fff\"/>\n      <path d=\"M 18,18 H 54 V 162 H 90 V 18 H 126 V 162 H 162 V 126 H 18 V 90 H 162 V 54 H 18 z\" fill=\"#000094\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('O', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#fc0\"/>\n      <path d=\"M 18,18 H 162 V 162 z\" fill=\"#f00\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('P', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#000094\"/>\n      <rect x=\"54\" y=\"54\" width=\"72\" height=\"72\" fill=\"#fff\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('Q', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#fc0\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('R', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#f00\"/>\n      <path d=\"M 90,18 V 162 M 18,90 H 162\" stroke=\"#fc0\" stroke-width=\"36\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('S', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#fff\"/>\n      <rect x=\"54\" y=\"54\" width=\"72\" height=\"72\" fill=\"#000094\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('T', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#000094\"/>\n      <rect x=\"18\" y=\"18\" width=\"96\" height=\"144\" fill=\"#fff\"/>\n      <rect x=\"18\" y=\"18\" width=\"48\" height=\"144\" fill=\"#f00\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('U', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#ffffff\"/>\n      <path d=\"M 18,18 H 90 V 90 H 18 z\" fill=\"#ff0000\"/>\n      <path d=\"M 162,91 H 91 V 162 H 162 z\" fill=\"#ff0000\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('V', new InlineSvg_1.InlineSvg(`<clipPath id=\"c\">\n      <path d=\"M 18,18 H 162 V 162 H 18 z\"/>\n      </clipPath>\n      <rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#fff\"/>\n      <path d=\"M 18,18 L 162,162 M 162,18 L 18,162\" clip-path=\"url(#c)\" stroke=\"#f00\" stroke-width=\"28.8\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('W', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#000094\"/>\n      <rect x=\"42\" y=\"42\" width=\"96\" height=\"96\" fill=\"#fff\"/>\n      <rect x=\"66\" y=\"66\" width=\"48\" height=\"48\" fill=\"#f00\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('X', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#fff\"/>\n      <path d=\"M 90,18 V 162 M 18,90 H 162\" stroke=\"#000094\" stroke-width=\"36\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('Y', new InlineSvg_1.InlineSvg(`<clipPath id=\"c\"><path d=\"m18,18h144v144H18\"/></clipPath>\n      <path fill=\"#FC0\" d=\"m18,18h144v144H18\"/>\n      <path stroke=\"#F00\" stroke-dasharray=\"18.8\" stroke-width=\"250\" clip-path=\"url(#c)\" d=\"m4,4 160,160\"/>\n      <path fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\" d=\"M18,18H162V162H18z\"/>`, 180, 180)),\n            new CharacterImage_1.CharacterImage('Z', new InlineSvg_1.InlineSvg(`<rect x=\"18\" y=\"18\" width=\"144\" height=\"144\" fill=\"#fc0\"/>\n      <path d=\"M 18,18 V 162 H 162 z\" fill=\"#000\"/>\n      <path d=\"M 162,18 V 162 H 18 z\" fill=\"#000094\"/>\n      <path d=\"M 90,90 L 162,162 H 18 z\" fill=\"#f00\"/>\n      <path d=\"M 18,18 H 162 V 162 H 18 z\" fill=\"none\" stroke=\"#000\" stroke-width=\"3.75\" stroke-linejoin=\"round\"/>`, 180, 180)),\n        ];\n    }\n    get entries() {\n        return this._entries;\n    }\n    lookup(letter) {\n        for (const ch of this._entries) {\n            if (ch.character.toUpperCase() === letter.toUpperCase()) {\n                return ch;\n            }\n        }\n        return null;\n    }\n}\nexports.NavalFlags = NavalFlags;\nNavalFlags.instance = new NavalFlags();\n//# sourceMappingURL=NavalFlags.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ResistorColorEntry_1 = require(\"./ResistorColorEntry\");\nclass Resistor {\n    /**\n     * getValue assumes there is no tolerance band, as tolerance is not part of\n     * the value calculation\n     */\n    static getValue(colors) {\n        if (colors.length < 3 || colors.length > 4) {\n            throw new RangeError('Invalid resistor size');\n        }\n        // Should we throw an error if the first color is black?  In resistors, it's\n        // technically not allowed, but in puzzle events who knows what they'll do.\n        // The math works out fine (it's just a leading zero), so for now it's\n        // allowed.\n        // Iterate through all but the final band (the multipler) and extract the\n        // values\n        let value = 0;\n        for (let i = 0; i < colors.length - 1; ++i) {\n            const currentColor = colors[i];\n            if (currentColor.value === undefined) {\n                return Resistor.INVALID_RESISTOR;\n            }\n            value *= 10;\n            value += currentColor.value;\n        }\n        return Resistor.applyMultiplier(value, colors[colors.length - 1].multiplier);\n    }\n    static getDisplayValue(value) {\n        if (value >= 1000000000) {\n            return `${value / 1000000000}G`;\n        }\n        else if (value >= 1000000) {\n            return `${value / 1000000}M`;\n        }\n        else if (value >= 1000) {\n            return `${value / 1000}k`;\n        }\n        else {\n            return value.toString();\n        }\n    }\n    static applyMultiplier(value, multipler) {\n        if (multipler >= 1) {\n            return value * multipler;\n        }\n        else if (multipler > 0) {\n            // Avoid floating point multiplication issues\n            return value / (1 / multipler);\n        }\n        else {\n            throw new RangeError('Invalid multiplier');\n        }\n    }\n}\nexports.Resistor = Resistor;\n// Name, Color, Multiplier, Value, Tolerance\nResistor.BLACK = new ResistorColorEntry_1.ResistorColorEntry('Black', '#000000', 1, 0);\nResistor.BROWN = new ResistorColorEntry_1.ResistorColorEntry('Brown', '#8B4513', 10, 1, 1);\nResistor.RED = new ResistorColorEntry_1.ResistorColorEntry('Red', '#FF0000', 100, 2, 2);\nResistor.ORANGE = new ResistorColorEntry_1.ResistorColorEntry('Orange', '#EE7420', 1000, 3);\nResistor.YELLOW = new ResistorColorEntry_1.ResistorColorEntry('Yellow', '#FFFF00', 10000, 4);\nResistor.GREEN = new ResistorColorEntry_1.ResistorColorEntry('Green', '#008000', 100000, 5, 0.5);\nResistor.BLUE = new ResistorColorEntry_1.ResistorColorEntry('Blue', '#0000FF', 1000000, 6, 0.25);\nResistor.VIOLET = new ResistorColorEntry_1.ResistorColorEntry('Violet', '#800080', 10000000, 7, 0.1);\nResistor.GREY = new ResistorColorEntry_1.ResistorColorEntry('Grey', '#808080', 100000000, 8);\nResistor.WHITE = new ResistorColorEntry_1.ResistorColorEntry('White', '#FFFFFF', 1000000000, 9);\nResistor.GOLD = new ResistorColorEntry_1.ResistorColorEntry('Gold', '#AB8D3F', 0.1, undefined, 5);\nResistor.SILVER = new ResistorColorEntry_1.ResistorColorEntry('Silver', '#C0C0C0', 0.01, undefined, 10);\nResistor.colorTable = [\n    Resistor.BLACK,\n    Resistor.BROWN,\n    Resistor.RED,\n    Resistor.ORANGE,\n    Resistor.YELLOW,\n    Resistor.GREEN,\n    Resistor.BLUE,\n    Resistor.VIOLET,\n    Resistor.GREY,\n    Resistor.WHITE,\n    Resistor.GOLD,\n    Resistor.SILVER,\n];\nResistor.INVALID_RESISTOR = -1;\n//# sourceMappingURL=Resistor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nconst EncodingCharacterBase_1 = require(\"../Common/EncodingCharacterBase\");\nconst SemaphoreData_1 = require(\"./SemaphoreData\");\nconst SemaphoreDegrees_1 = require(\"./SemaphoreDegrees\");\nconst SemaphoreEncoding_1 = require(\"./SemaphoreEncoding\");\nclass SemaphoreCharacter extends EncodingCharacterBase_1.EncodingCharacterBase {\n    constructor(encoding = SemaphoreEncoding_1.SemaphoreEncoding.None, category = EncodingCategory_1.EncodingCategory.All) {\n        super(SemaphoreData_1.SemaphoreData.instance, category);\n        this._directions = [];\n        this.addDirection(encoding);\n    }\n    static parseEncoding(encoding) {\n        const directions = [];\n        for (let i = 1; i <= 8; i++) {\n            const direction = (1 << i);\n            if ((encoding & direction) === direction) {\n                directions.push(direction);\n            }\n        }\n        return directions;\n    }\n    get directions() {\n        return this._directions;\n    }\n    set directions(value) {\n        this._directions = value.slice(0, 2);\n        this.invalidateLookup();\n    }\n    addDirection(direction) {\n        for (const dir of SemaphoreCharacter.parseEncoding(direction)) {\n            this._directions.push(dir);\n        }\n        if (this._directions.length > 2) {\n            this._directions.splice(0, this._directions.length - 2);\n        }\n        this.invalidateLookup();\n    }\n    removeDirection(direction) {\n        for (const dir of SemaphoreCharacter.parseEncoding(direction)) {\n            const index = this._directions.indexOf(dir);\n            if (index >= 0) {\n                this._directions.splice(index, 1);\n            }\n        }\n        this.invalidateLookup();\n    }\n    hasDirection(direction) {\n        return this._directions.indexOf(direction) >= 0;\n    }\n    getDegrees() {\n        return this._directions\n            .map(value => SemaphoreDegrees_1.SemaphoreDegrees.ToDegrees(value))\n            .sort((a, b) => a - b);\n    }\n    getPotentialMatch(other) {\n        if (this.directions.length !== 1 || this.directions[0] === other) {\n            return null;\n        }\n        const potentialMatch = this.getPotentialMatches().filter(value => (value.encoding & other) === other)[0];\n        return potentialMatch || null;\n    }\n    onClear() {\n        this._directions.length = 0;\n    }\n    onEmpty() {\n        return this._directions.length === 0;\n    }\n    getEncoding() {\n        return this._directions.reduce((previousValue, currentValue) => (previousValue |= currentValue), SemaphoreEncoding_1.SemaphoreEncoding.None);\n    }\n}\nexports.SemaphoreCharacter = SemaphoreCharacter;\n//# sourceMappingURL=SemaphoreCharacter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EncodingCategory_1 = require(\"../Common/EncodingCategory\");\nconst SemaphoreData_1 = require(\"./SemaphoreData\");\nconst SemaphoreEncoding_1 = require(\"./SemaphoreEncoding\");\nclass SemaphoreStream {\n    constructor(chars) {\n        this._chars = [];\n        this._currentStr = '';\n        this._processPosition = 0;\n        if (chars) {\n            this._chars = Array.from(chars);\n        }\n        this._state = {\n            numberMode: false,\n        };\n        this.invalidate();\n    }\n    get chars() {\n        return this._chars;\n    }\n    set chars(value) {\n        this.clear();\n        for (const ch of value) {\n            this._chars.push(ch);\n        }\n    }\n    append(ch) {\n        this._chars.push(ch.valueOf());\n    }\n    clear() {\n        this._chars.length = 0;\n        this.invalidate();\n    }\n    space() {\n        this._chars.push(SemaphoreEncoding_1.SemaphoreEncoding.None);\n    }\n    toString() {\n        this.update();\n        return this._currentStr;\n    }\n    invalidate() {\n        this._currentStr = '';\n        this._processPosition = 0;\n    }\n    update() {\n        while (this._processPosition < this._chars.length) {\n            const ch = this._chars[this._processPosition];\n            if (ch === SemaphoreEncoding_1.SemaphoreEncoding.None) {\n                this._state.numberMode = false;\n                this._currentStr += ' ';\n            }\n            else if (ch === SemaphoreEncoding_1.SemaphoreEncoding.FormattingNumber) {\n                this._state.numberMode = true;\n                this._currentStr += '#';\n            }\n            else {\n                const category = EncodingCategory_1.EncodingCategory.Punctuation |\n                    (this._state.numberMode\n                        ? EncodingCategory_1.EncodingCategory.Number\n                        : EncodingCategory_1.EncodingCategory.Letter);\n                const exact = SemaphoreData_1.SemaphoreData.instance.lookup(ch, category).exact;\n                if (exact.length > 0) {\n                    this._currentStr += exact[0].toString();\n                }\n            }\n            this._processPosition++;\n        }\n    }\n}\nexports.SemaphoreStream = SemaphoreStream;\n//# sourceMappingURL=SemaphoreStream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst trie = require(\"trie-prefix-tree\");\nconst Result_1 = require(\"./Result\");\nconst WordSearchDirection_1 = require(\"./WordSearchDirection\");\nclass WordSearchSolver {\n    constructor() {\n        // Use empty grid and list by default\n        this._matrix = [[]];\n        this._targets = trie([]);\n        // Use both sets of directions by default\n        this._directions = [\n            // Cardinal directions\n            [0, 1],\n            [-1, 0],\n            [1, 0],\n            [0, -1],\n            // Diagonal\n            [1, 1],\n            [-1, -1],\n            [1, -1],\n            [-1, 1],\n        ];\n        this._canBend = false;\n    }\n    setWords(words) {\n        this._targets = trie([]);\n        for (const full of words) {\n            if (full === null || typeof full === 'undefined') {\n                throw new Error('Invalid input in WordSearchSolver.findWords()');\n            }\n            const word = full.trim();\n            if (word !== '') {\n                this._targets.addWord(word);\n            }\n            else {\n                throw new Error('Cannot find an empty string in the wordsearch');\n            }\n        }\n    }\n    setGrid(matrix) {\n        this._matrix = matrix;\n    }\n    setDirections(direction) {\n        this._directions = [];\n        if (direction === WordSearchDirection_1.WordSearchDirection.Cardinal ||\n            direction === WordSearchDirection_1.WordSearchDirection.CardinalAndDiagonal) {\n            this._directions = this._directions.concat([\n                [0, 1],\n                [-1, 0],\n                [1, 0],\n                [0, -1],\n            ]);\n        }\n        if (direction === WordSearchDirection_1.WordSearchDirection.Diagonal ||\n            direction === WordSearchDirection_1.WordSearchDirection.CardinalAndDiagonal) {\n            this._directions = this._directions.concat([\n                [1, 1],\n                [-1, -1],\n                [1, -1],\n                [-1, 1],\n            ]);\n        }\n    }\n    setCanBend(canBend) {\n        this._canBend = canBend;\n    }\n    findWords() {\n        const results = [];\n        const numRows = this._matrix.length;\n        for (let yIdx = 0; yIdx < numRows; yIdx++) {\n            const lineLength = this._matrix[yIdx].length;\n            for (let xIdx = 0; xIdx < lineLength; xIdx++) {\n                const p = { x: xIdx, y: yIdx };\n                const pointResults = this.search(p);\n                results.push(...pointResults);\n            }\n        }\n        return results;\n    }\n    search(start) {\n        const results = [];\n        if (this._canBend) {\n            const history = [];\n            const dfsResults = this.dfsCheck(start, new Set(), history);\n            results.push(...dfsResults);\n        }\n        else {\n            for (const translation of this._directions) {\n                const directionalResults = this.lineCheck(start, translation);\n                results.push(...directionalResults);\n            }\n        }\n        return results;\n    }\n    dfsCheck(start, visited, history) {\n        const results = [];\n        if (visited.has(start)) {\n            return results;\n        }\n        visited.add(start);\n        history.push(start);\n        let currentString = '';\n        for (let i = 0; i < history.length; i++) {\n            const pt = history[i];\n            currentString = currentString + this._matrix[pt.y][pt.x];\n        }\n        const wordsWithPrefix = this._targets.getPrefix(currentString);\n        if (wordsWithPrefix.length === 0) {\n            visited.delete(start);\n            history.pop();\n            return results;\n        }\n        if (wordsWithPrefix.indexOf(currentString) !== -1) {\n            const foundWord = new Result_1.Result(currentString, history);\n            results.push(foundWord);\n        }\n        for (const translation of this._directions) {\n            const next = {\n                x: start.x + translation[0],\n                y: start.y + translation[1],\n            };\n            if (this.isInBounds(next)) {\n                results.push(...this.dfsCheck(next, visited, history));\n            }\n        }\n        visited.delete(start);\n        history.pop();\n        return results;\n    }\n    lineCheck(start, direction) {\n        const results = [];\n        // Working set\n        let currentPoint = start;\n        let currentString = '';\n        const pointHistory = [];\n        while (this.isInBounds(currentPoint)) {\n            currentString =\n                currentString + this._matrix[currentPoint.y][currentPoint.x];\n            // Get the candidates with the current prefix string\n            const wordsWithPrefix = this._targets.getPrefix(currentString);\n            // No point in going on, we've run out of possibilities\n            if (wordsWithPrefix.length === 0) {\n                break;\n            }\n            const p = { x: currentPoint.x, y: currentPoint.y };\n            pointHistory.push(p);\n            // Is a candidate an exact match for the current search string? Save it.\n            if (wordsWithPrefix.indexOf(currentString) !== -1) {\n                const foundWord = new Result_1.Result(currentString, pointHistory);\n                results.push(foundWord);\n            }\n            const next = {\n                x: currentPoint.x + direction[0],\n                y: currentPoint.y + direction[1],\n            };\n            currentPoint = next;\n        }\n        return results;\n    }\n    isInBounds(point) {\n        if (point.y < 0 || point.y >= this._matrix.length) {\n            return false;\n        }\n        if (point.x < 0 || point.x >= this._matrix[point.y].length) {\n            return false;\n        }\n        return true;\n    }\n}\nexports.WordSearchSolver = WordSearchSolver;\n//# sourceMappingURL=WordSearchSolver.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = function (input) {\n  if (!Array.isArray(input)) {\n    throw 'Expected parameter Array, received ' + (typeof input === 'undefined' ? 'undefined' : _typeof(input));\n  }\n\n  var trie = (0, _create2.default)([].concat(_toConsumableArray(input)));\n\n  return {\n    /**\n     * Get the generated raw trie object\n    */\n    tree: function tree() {\n      return trie;\n    },\n\n\n    /**\n     * Get a string representation of the trie\n    */\n    dump: function dump() {\n      var spacer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      return _utils2.default.stringify(trie, spacer);\n    },\n\n\n    /**\n     * Add a new word to the trie\n     */\n    addWord: function addWord(word) {\n      if (typeof word !== 'string' || word === '') {\n        throw 'Expected parameter string, received ' + (typeof word === 'undefined' ? 'undefined' : _typeof(word));\n      }\n\n      var reducer = function reducer() {\n        return _append2.default.apply(undefined, arguments);\n      };\n\n      var input = word.toLowerCase().split('');\n      input.reduce(reducer, trie);\n\n      return this;\n    },\n\n\n    /**\n     * Remove an existing word from the trie\n     */\n    removeWord: function removeWord(word) {\n      if (typeof word !== 'string' || word === '') {\n        throw 'Expected parameter string, received ' + (typeof word === 'undefined' ? 'undefined' : _typeof(word));\n      }\n\n      var _checkPrefix = (0, _checkPrefix6.default)(trie, word),\n          prefixFound = _checkPrefix.prefixFound,\n          prefixNode = _checkPrefix.prefixNode;\n\n      if (prefixFound) {\n        delete prefixNode[_config2.default.END_WORD];\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Check a prefix is valid\n     * @returns Boolean\n    */\n    isPrefix: function isPrefix(prefix) {\n      if (typeof prefix !== 'string') {\n        throw 'Expected string prefix, received ' + (typeof prefix === 'undefined' ? 'undefined' : _typeof(prefix));\n      }\n\n      var _checkPrefix2 = (0, _checkPrefix6.default)(trie, prefix),\n          prefixFound = _checkPrefix2.prefixFound;\n\n      return prefixFound;\n    },\n\n\n    /**\n    * Get a list of all words in the trie with the given prefix\n    * @returns Array\n    */\n    getPrefix: function getPrefix(strPrefix) {\n      var sorted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (typeof strPrefix !== 'string') {\n        throw 'Expected string prefix, received ' + (typeof strPrefix === 'undefined' ? 'undefined' : _typeof(strPrefix));\n      }\n\n      if (typeof sorted !== 'boolean') {\n        throw 'Expected sort parameter as boolean, received ' + (typeof sorted === 'undefined' ? 'undefined' : _typeof(sorted));\n      }\n\n      if (!this.isPrefix(strPrefix)) {\n        return [];\n      }\n\n      var prefixNode = strPrefix.length ? (0, _checkPrefix6.default)(trie, strPrefix).prefixNode : trie;\n\n      return (0, _recursePrefix2.default)(prefixNode, strPrefix, sorted);\n    },\n\n\n    /**\n    * Get a random word in the trie with the given prefix\n    * @returns Array\n    */\n    getRandomWordWithPrefix: function getRandomWordWithPrefix(strPrefix) {\n      if (typeof strPrefix !== 'string') {\n        throw 'Expected string prefix, received ' + (typeof strPrefix === 'undefined' ? 'undefined' : _typeof(strPrefix));\n      }\n\n      if (!this.isPrefix(strPrefix)) {\n        return '';\n      }\n\n      var _checkPrefix3 = (0, _checkPrefix6.default)(trie, strPrefix),\n          prefixNode = _checkPrefix3.prefixNode;\n\n      return (0, _recurseRandomWord2.default)(prefixNode, strPrefix);\n    },\n\n\n    /**\n    * Count the number of words with the given prefixSearch\n    * @returns Number\n    */\n    countPrefix: function countPrefix(strPrefix) {\n      var prefixes = this.getPrefix(strPrefix);\n\n      return prefixes.length;\n    },\n\n\n    /**\n    * Get all words in the trie\n    * @returns Array\n    */\n    getWords: function getWords() {\n      var sorted = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      return this.getPrefix('', sorted);\n    },\n\n\n    /**\n    * Check the existence of a word in the trie\n    * @returns Boolean\n    */\n    hasWord: function hasWord(word) {\n      if (typeof word !== 'string') {\n        throw 'Expected string word, received ' + (typeof word === 'undefined' ? 'undefined' : _typeof(word));\n      }\n\n      var _checkPrefix4 = (0, _checkPrefix6.default)(trie, word),\n          prefixFound = _checkPrefix4.prefixFound,\n          prefixNode = _checkPrefix4.prefixNode;\n\n      if (prefixFound) {\n        return prefixNode[_config2.default.END_WORD] === 1;\n      }\n\n      return false;\n    },\n\n\n    /**\n    * Get a list of valid anagrams that can be made from the given letters\n    * @returns Array\n    */\n    getAnagrams: function getAnagrams(letters) {\n      if (typeof letters !== 'string') {\n        throw 'Anagrams expected string letters, received ' + (typeof letters === 'undefined' ? 'undefined' : _typeof(letters));\n      }\n\n      if (letters.length < PERMS_MIN_LEN) {\n        throw 'getAnagrams expects at least ' + PERMS_MIN_LEN + ' letters';\n      }\n\n      return (0, _permutations2.default)(letters, trie, {\n        type: 'anagram'\n      });\n    },\n\n\n    /**\n    * Get a list of all sub-anagrams that can be made from the given letters\n    * @returns Array\n    */\n    getSubAnagrams: function getSubAnagrams(letters) {\n      if (typeof letters !== 'string') {\n        throw 'Expected string letters, received ' + (typeof letters === 'undefined' ? 'undefined' : _typeof(letters));\n      }\n\n      if (letters.length < PERMS_MIN_LEN) {\n        throw 'getSubAnagrams expects at least ' + PERMS_MIN_LEN + ' letters';\n      }\n\n      return (0, _permutations2.default)(letters, trie, {\n        type: 'sub-anagram'\n      });\n    }\n  };\n};\n\nvar _create = require('./create');\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _append = require('./append');\n\nvar _append2 = _interopRequireDefault(_append);\n\nvar _checkPrefix5 = require('./checkPrefix');\n\nvar _checkPrefix6 = _interopRequireDefault(_checkPrefix5);\n\nvar _recursePrefix = require('./recursePrefix');\n\nvar _recursePrefix2 = _interopRequireDefault(_recursePrefix);\n\nvar _recurseRandomWord = require('./recurseRandomWord');\n\nvar _recurseRandomWord2 = _interopRequireDefault(_recurseRandomWord);\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _permutations = require('./permutations');\n\nvar _permutations2 = _interopRequireDefault(_permutations);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar PERMS_MIN_LEN = _config2.default.PERMS_MIN_LEN;\n\n;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = create;\n\nvar _append = require('./append');\n\nvar _append2 = _interopRequireDefault(_append);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction create(input) {\n  if (!Array.isArray(input)) {\n    throw 'Expected parameter Array, received ' + (typeof input === 'undefined' ? 'undefined' : _typeof(input));\n  }\n\n  var trie = input.reduce(function (accumulator, item) {\n    item.toLowerCase().split('').reduce(_append2.default, accumulator);\n\n    return accumulator;\n  }, {});\n\n  return trie;\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = checkPrefix;\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction checkPrefix(prefixNode, prefix) {\n  var input = prefix.toLowerCase().split('');\n  var prefixFound = input.every(function (letter, index) {\n    if (!prefixNode[letter]) {\n      return false;\n    }\n    return prefixNode = prefixNode[letter];\n  });\n\n  return {\n    prefixFound: prefixFound,\n    prefixNode: prefixNode\n  };\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = recursePrefix;\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// sort items as they're being found\n// to prevent slow .sort() in NodeJs\nvar pushInOrder = function pushInOrder(word, prefixes) {\n  var i = 0;\n\n  while (i < prefixes.length) {\n    if (word < prefixes[i]) {\n      break;\n    }\n    i += 1;\n  }\n\n  prefixes.splice(i, 0, word);\n\n  return prefixes;\n};\n\nfunction recursePrefix(node, prefix, sorted) {\n  var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n  var word = prefix;\n\n  for (var branch in node) {\n    var currentLetter = branch;\n    if (branch === _config2.default.END_WORD && typeof node[branch] === 'number') {\n      if (sorted) {\n        pushInOrder(word, prefixes);\n      } else {\n        prefixes.push(word);\n      }\n      word = '';\n    } else if (branch === _config2.default.END_WORD_REPLACER) {\n      currentLetter = _config2.default.END_WORD;\n    }\n    recursePrefix(node[branch], prefix + currentLetter, sorted, prefixes);\n  }\n\n  return prefixes;\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = recurseRandomWord;\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction recurseRandomWord(node, prefix) {\n  var word = prefix;\n  var branches = Object.keys(node);\n  var branch = branches[Math.floor(Math.random() * branches.length)];\n\n  if (branch === _config2.default.END_WORD) {\n    return word;\n  }\n  return recurseRandomWord(node[branch], prefix + branch);\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = permutations;\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction permutations(letters, trie) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    type: 'anagram'\n  };\n\n  if (typeof letters !== 'string') {\n    throw 'Permutations expects string letters, received ' + (typeof letters === 'undefined' ? 'undefined' : _typeof(letters));\n  }\n\n  var words = [];\n\n  var permute = function permute(word, node) {\n    var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n    var wordIsEmpty = word.length === 0;\n    var wordFound = words.indexOf(prefix) !== -1;\n    var endWordFound = node[_config2.default.END_WORD] === 1;\n\n    if (wordIsEmpty && endWordFound && !wordFound) {\n      words.push(prefix);\n    }\n\n    for (var i = 0, len = word.length; i < len; i++) {\n      var letter = word[i];\n\n      if (opts.type === 'sub-anagram') {\n        if (endWordFound && !(words.indexOf(prefix) !== -1)) {\n          words.push(prefix);\n        }\n      }\n\n      if (node[letter]) {\n        var remaining = word.substring(0, i) + word.substring(i + 1, len);\n        permute(remaining, node[letter], prefix + letter, words);\n      }\n    }\n\n    return words.sort();\n  };\n\n  return permute(letters, trie);\n};\nmodule.exports = exports['default'];"],"sourceRoot":""}