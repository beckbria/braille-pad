{"version":3,"sources":["Data/LocalStorageComponent.ts","Data/LocalStorage.ts","version.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","Views/TabViewBase.tsx","Morse/MorsePicture.tsx","Morse/MorseStream.tsx","Morse/MorseTable.tsx","Views/Encoding/Morse.tsx"],"names":["LocalStorageComponent","this","restoreState","updateState","onUpdateState","saveState","LocalStorage","setObject","getLocalStorageKey","onSaveState","onRestoreState","getObject","Component","undefined","_isSupported","storage","window","localStorage","x","setItem","removeItem","e","DOMException","code","name","length","clearOnVersionMismatch","key","isSupported","getItem","getKey","objString","JSON","parse","value","object","stringify","clear","STORAGE_KEY_PREFIX","prev","current","compareVersions","prevVersion","VERSION_STORAGE_KEY","didVersionChange","version","target","property","receiver","Reflect","get","base","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","TabViewBase","props","_activeKey","state","activeKey","savedState","setState","renderDot","className","viewBox","cx","cy","r","renderDash","width","height","MorsePicture","Array","from","morseString","map","index","MorseStream","_morseStream","onKeyDown","bind","onKeyPress","morseStream","document","addEventListener","removeEventListener","Header","Body","codeText","plainText","invertText","reverseText","invertReverseText","onClick","onDotClick","variant","onDashClick","onBackspaceClick","onNextClick","onClearClick","replace","MorseString","toString","invertDotsAndDashes","reverse","ev","defaultPrevented","handled","keyCode","preventDefault","Character","DOT","DASH","substring","lastCharacter","slice","CHARACTER_DIVIDER","WORD_DIVIDER","MorseTable","characters","getPotentialMatches","striped","responsive","entry","display","toMorseString","encoding","Morse","id","onSelect","onTabSelect","eventKey","title"],"mappings":"uKAGeA,E,4LAEXC,KAAKC,eACLD,KAAKE,gB,oCAILF,KAAKG,gBACLH,KAAKI,c,kCASLC,IAAaC,UAAsBN,KAAKO,qBAAsBP,KAAKQ,iB,qCAInER,KAAKS,eAAeJ,IAAaK,UAAsBV,KAAKO,2B,GArBcI,aAyB/DZ,O,gFCzBTM,E,2GAMF,QAA0BO,IAAtBZ,KAAKa,aAA4B,CACnC,IAAMC,EAAUC,OAAOC,aACjBC,EAAI,mBAEV,IACEH,EAAQI,QAAQD,EAAGA,GACnBH,EAAQK,WAAWF,GACnBjB,KAAKa,cAAe,EACpB,MAAOO,GACPpB,KAAKa,aAAeO,aAAaC,eAEpB,KAAXD,EAAEE,MAES,OAAXF,EAAEE,MAGS,uBAAXF,EAAEG,MAES,+BAAXH,EAAEG,OAEiB,IAAnBT,EAAQU,OAGRxB,KAAKa,cACPb,KAAKyB,yBAIT,OAAOzB,KAAKa,e,8BAGQa,GACpB,OAAI1B,KAAK2B,cACAZ,OAAOC,aAAaY,QAAQ5B,KAAK6B,OAAOH,IAG1C,O,gCAGkBA,GACzB,GAAI1B,KAAK2B,cAAe,CACtB,IAAMG,EAAYf,OAAOC,aAAaY,QAAQ5B,KAAK6B,OAAOH,IAE1D,GAAkB,OAAdI,EACF,OAAOC,KAAKC,MAAMF,GAItB,OAAO,O,8BAGaJ,EAAaO,GAC7BjC,KAAK2B,eACPZ,OAAOC,aAAaE,QAAQlB,KAAK6B,OAAOH,GAAMO,K,gCAIvBP,EAAaQ,GAClClC,KAAK2B,eACPZ,OAAOC,aAAaE,QAAQlB,KAAK6B,OAAOH,GAAMK,KAAKI,UAAUD,M,8BAK3DlC,KAAK2B,eACPZ,OAAOC,aAAaoB,U,6BAIFV,GACpB,MAAM,GAAN,OAAU1B,KAAKqC,mBAAf,YAAqCX,K,uCAGPY,EAAqBC,GACnD,IACE,GAAID,EACF,OAA0C,IAAnCE,IAAgBD,EAASD,GAElC,UAMF,OAAO,I,+CAIP,IAAMG,EAAczC,KAAK4B,QAAQ5B,KAAK0C,qBAClC1C,KAAK2C,iBAAiBF,EAAaG,OAIrC5C,KAAKoC,QAGLpC,KAAKkB,QAAQlB,KAAK0C,oBAAqBE,U,KAtGvCvC,EACoBqC,oBAAsB,aAD1CrC,EAEoBgC,mBAAqB,WAFzChC,EAGWQ,kB,EAwGFR,O,iCC9Gf,kCACO,IAAMuC,EAAU,S,6CCAR,SAAS,EAAKC,EAAQC,EAAUC,GAiB7C,OAfE,EADqB,qBAAZC,SAA2BA,QAAQC,IACrCD,QAAQC,IAER,SAAcJ,EAAQC,EAAUC,GACrC,IAAIG,ECLK,SAAwBhB,EAAQY,GAC7C,MAAQK,OAAOC,UAAUC,eAAeC,KAAKpB,EAAQY,IAEpC,QADfZ,EAAS,OAAAqB,EAAA,GAAerB,MAI1B,OAAOA,EDDQ,CAAcW,EAAQC,GACjC,GAAKI,EAAL,CACA,IAAIM,EAAOL,OAAOM,yBAAyBP,EAAMJ,GAEjD,OAAIU,EAAKP,IACAO,EAAKP,IAAIK,KAAKP,GAGhBS,EAAKvB,SAIJY,EAAQC,EAAUC,GAAYF,GAlB5C,mC,6EEkBea,E,YAGb,WAAYC,GAAe,IAAD,8BACxB,4CAAMA,KAHAC,WAAqB,EAK3B,EAAKC,MAAQ,CACXC,UAAW,EAAKF,YAJM,E,2EAkBxB,MAAO,CACLE,UAAW9D,KAAK4D,c,qCAIKG,GACJ,OAAfA,IACF/D,KAAK4D,WAAaG,EAAWD,a,sCAK/B9D,KAAKgE,SAAS,CACZF,UAAW9D,KAAK4D,e,kCAIEE,GACpB9D,KAAK4D,WAAaE,EAClB9D,KAAKE,kB,UAxC0BH,GA4CpB2D,O,6TCxDR,SAASO,IACd,OACE,yBAAKC,UAAU,uBAAuBC,QAAQ,aAC5C,4BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAD5B,oDAOG,SAASC,IACd,OACE,yBAAKL,UAAU,wBAAwBC,QAAQ,aAC7C,0BAAMK,MAAM,KAAKC,OAAO,OAD1B,oDAoBWC,MAbf,SAAsBf,GACpB,OACE,oCACGgB,MAAMC,KAAKjB,EAAMkB,aACfC,KAAI,SAAC7C,EAAe8C,GAAhB,OACH,0BAAMrD,IAAKqD,GACE,MAAV9C,EAAgBgC,IAAcM,UCwQ5BS,G,mBA9Qb,WAAYrB,GAAe,IAAD,8BACxB,4CAAMA,KAHAsB,aAAuB,GAK7B,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAElB,EAAKtB,MAAQ,CACXwB,YAAa,EAAKJ,cAPI,E,iFAYxB,0EACAK,SAASC,iBAAiB,UAAWvF,KAAKkF,WAC1CI,SAASC,iBAAiB,WAAYvF,KAAKoF,c,6CAI3CE,SAASE,oBAAoB,UAAWxF,KAAKkF,WAC7CI,SAASE,oBAAoB,WAAYxF,KAAKoF,c,+BAG/B,IAAD,OACd,OACE,yBAAKlB,UAAU,eACb,kBAAC,IAAD,CAAMA,UAAU,4BACd,kBAAC,IAAKuB,OAAN,cACA,kBAAC,IAAKC,KAAN,KACE,6BACG1F,KAAK2F,WAAW,0BAAMzB,UAAU,mBAAhB,QAIvB,kBAAC,IAAD,CAAMA,UAAU,sBACd,kBAAC,IAAKuB,OAAN,kBACA,kBAAC,IAAKC,KAAN,KACE,6BACG1F,KAAK4F,aAAe,OAI3B,kBAAC,IAAD,CAAM1B,UAAU,sBACd,kBAAC,IAAKuB,OAAN,yBACA,kBAAC,IAAKC,KAAN,KACE,6BACG1F,KAAK6F,cAAgB,OAI5B,kBAAC,IAAD,CAAM3B,UAAU,sBACd,kBAAC,IAAKuB,OAAN,sBACA,kBAAC,IAAKC,KAAN,KACE,6BACG1F,KAAK8F,eAAiB,OAI7B,kBAAC,IAAD,CAAM5B,UAAU,sBACd,kBAAC,IAAKuB,OAAN,yCACA,kBAAC,IAAKC,KAAN,KACE,6BACG1F,KAAK+F,qBAAuB,OAInC,kBAAC,IAAD,CAAe7B,UAAU,6BACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE8B,QAAS,kBAAM,EAAKC,cACpBC,QAAQ,WAEPjC,MAGL,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE+B,QAAS,kBAAM,EAAKG,eACpBD,QAAQ,WAEP3B,OAIP,kBAAC,IAAD,CAAeL,UAAU,wBACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ8B,QAAS,kBAAM,EAAKI,qBAA5B,WAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQJ,QAAS,kBAAM,EAAKK,gBAA5B,SAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEL,QAAS,kBAAM,EAAKM,gBACpBJ,QAAQ,UAFV,c,2CAaR,MAAO,gB,oCAIP,MAAO,CACLb,YAAarF,KAAKiF,gB,qCAIGlB,GACJ,OAAfA,IACF/D,KAAKiF,aAAelB,EAAWsB,e,sCAKjCrF,KAAKgE,SAAS,CACZqB,YAAarF,KAAKiF,iB,iCAQpB,OAAOjF,KAAKiF,aAAasB,QAAQ,MAAO,QAAUA,QAAQ,KAAM,Y,kCAIhE,OAAO,IAAIC,cAAYxG,KAAKiF,cAAcwB,a,mCAI1C,OAAO,IAAID,cAAYxG,KAAKiF,cAAcyB,sBAAsBD,a,oCAIhE,OAAO,IAAID,cAAYxG,KAAKiF,cAAc0B,UAAUF,a,0CAIpD,OAAO,IAAID,cAAYxG,KAAKiF,cACzByB,sBACAC,UACAF,a,gCAGaG,GAChB,IAAIA,EAAGC,iBAAP,CAIA,IAAIC,GAAU,EAIE,cAAXF,EAAGlF,KAAwC,IAAfkF,EAAGG,UAClC/G,KAAKoG,mBACLU,GAAU,GAGRA,GACFF,EAAGI,oB,iCAIYJ,GACjB,IAAIA,EAAGC,iBAAP,CAIA,IAAIC,GAAU,EACd,GAAIF,EAAGlF,IACL,OAAQkF,EAAGlF,KACT,IAAK,IACL,IAAK,IACH1B,KAAKmG,cACL,MACF,IAAK,IACL,IAAK,IACHnG,KAAKiG,aACL,MACF,IAAK,QACL,IAAK,IACL,IAAK,IACHjG,KAAKqG,cACL,MACF,IAAK,IACHrG,KAAKoG,mBACL,MACF,QACEU,GAAU,OAId,OAAQF,EAAGG,SACT,KAAK,GACL,KAAK,IACH/G,KAAKmG,cACL,MACF,KAAK,GACL,KAAK,IACHnG,KAAKiG,aACL,MACF,KAAK,GACL,KAAK,GACL,KAAK,IACHjG,KAAKqG,cACL,MACF,KAAK,GACHrG,KAAKoG,mBACL,MACF,QACEU,GAAU,EAIZA,GACFF,EAAGI,oB,mCAKLhH,KAAKiF,cAAgBgC,iBAAUC,IAE/BlH,KAAKE,gB,oCAILF,KAAKiF,cAAgBgC,iBAAUE,KAE/BnH,KAAKE,gB,yCAIDF,KAAKiF,aAAazD,OAAS,IAC7BxB,KAAKiF,aACHjF,KAAKiF,aAAamC,UAAU,EAAGpH,KAAKiF,aAAazD,OAAS,IAG9DxB,KAAKE,gB,oCAIL,GAAIF,KAAKiF,aAAazD,OAAS,EAAG,CAChC,IAAM6F,EAAgBrH,KAAKiF,aAAaqC,OAAO,GAC3CD,IAAkBb,cAAYe,kBAEhCvH,KAAKiF,aACHjF,KAAKiF,aAAamC,UAAU,EAAGpH,KAAKiF,aAAazD,OAAS,GAC1DgF,cAAYgB,aACLH,IAAkBb,cAAYgB,eACvCxH,KAAKiF,cAAgBuB,cAAYe,mBAIrCvH,KAAKE,gB,qCAILF,KAAKiF,aAAe,GAEpBjF,KAAKE,kB,GA9QiBH,M,yBCcX0H,MA5Bf,WACE,IAAMC,GAAa,IAAIT,kBAAYU,sBACnC,OACE,yBAAKzD,UAAU,cACb,kBAAC,IAAD,CAAO0D,SAAS,EAAMC,YAAY,GAChC,+BACE,4BACE,yCACA,uCAGJ,+BACGH,EAAW5C,KAAI,SAACgD,GAAD,OACd,wBAAIpG,IAAKoG,EAAMC,SACb,4BAAKD,EAAMC,SACX,4BACE,yBAAK7D,UAAU,wBACb,kBAAC,EAAD,CAAcW,YAAaoC,iBAAUe,cAAcF,EAAMG,sBCfrEC,G,wLACa,IAAD,OACd,OACE,yBAAKhE,UAAU,SACb,kBAAC,IAAD,CACEJ,UAAW9D,KAAK6D,MAAMC,UACtBqE,GAAG,aAEHC,SAAU,SAACtE,GAAD,OAAoB,EAAKuE,YAAYvE,KAE/C,kBAAC,IAAD,CAAKI,UAAU,kBAAkBoE,SAAU,EAAGC,MAAM,SAClD,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAKD,SAAU,EAAGC,MAAM,aACtB,kBAAC,EAAD,W,2CAQR,MAAO,Y,GAtBS7E,MA0BLwE","file":"static/js/12.d4433590.chunk.js","sourcesContent":["import { Component } from 'react';\nimport LocalStorage from './LocalStorage';\n\nabstract class LocalStorageComponent<P = {}, S = {}, SavedState = {}> extends Component<P, S> {\n  public componentDidMount() {\n    this.restoreState();\n    this.updateState();\n  }\n\n  protected updateState() {\n    this.onUpdateState();\n    this.saveState();\n  }\n\n  protected abstract getLocalStorageKey(): string;\n  protected abstract onSaveState(): SavedState;\n  protected abstract onRestoreState(savedState: SavedState | null): void;\n  protected abstract onUpdateState(): void;\n\n  private saveState() {\n    LocalStorage.setObject<SavedState>(this.getLocalStorageKey(), this.onSaveState());\n  }\n\n  private restoreState() {\n    this.onRestoreState(LocalStorage.getObject<SavedState>(this.getLocalStorageKey()));\n  }\n}\n\nexport default LocalStorageComponent;\n","import compareVersions from 'compare-versions';\nimport { version } from '../version';\n\nclass LocalStorage {\n  private static readonly VERSION_STORAGE_KEY = 'appVersion';\n  private static readonly STORAGE_KEY_PREFIX = 'puzztool';\n  private static _isSupported?: boolean;\n\n  public static isSupported() {\n    if (this._isSupported === undefined) {\n      const storage = window.localStorage;\n      const x = '__storage_test__';\n\n      try {\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        this._isSupported = true;\n      } catch (e) {\n        this._isSupported = e instanceof DOMException && (\n          // everything except Firefox\n          e.code === 22 ||\n          // Firefox\n          e.code === 1014 ||\n          // test name field too, because code might not be present\n          // everything except Firefox\n          e.name === 'QuotaExceededError' ||\n          // Firefox\n          e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n          // acknowledge QuotaExceededError only if there's something already stored\n          storage.length !== 0;\n      }\n\n      if (this._isSupported) {\n        this.clearOnVersionMismatch();\n      }\n    }\n\n    return this._isSupported;\n  }\n\n  public static getItem(key: string) {\n    if (this.isSupported()) {\n      return window.localStorage.getItem(this.getKey(key));\n    }\n\n    return null;\n  }\n\n  public static getObject<T>(key: string) {\n    if (this.isSupported()) {\n      const objString = window.localStorage.getItem(this.getKey(key));\n\n      if (objString !== null) {\n        return JSON.parse(objString) as T;\n      }\n    }\n\n    return null;\n  }\n\n  public static setItem(key: string, value: string) {\n    if (this.isSupported()) {\n      window.localStorage.setItem(this.getKey(key), value);\n    }\n  }\n\n  public static setObject<T>(key: string, object: T) {\n    if (this.isSupported()) {\n      window.localStorage.setItem(this.getKey(key), JSON.stringify(object));\n    }\n  }\n\n  public static clear() {\n    if (this.isSupported()) {\n      window.localStorage.clear();\n    }\n  }\n\n  private static getKey(key: string) {\n    return `${this.STORAGE_KEY_PREFIX}_${key}`;\n  }\n\n  private static didVersionChange(prev: string | null, current: string) {\n    try {\n      if (prev) {\n        return compareVersions(current, prev) !== 0;\n      }\n    } catch {\n      // Something went wrong with parsing.\n    }\n\n    // If there's no existing version number or we had an exception while\n    // comparing it, just return `true` to play it safe.\n    return true;\n  }\n\n  private static clearOnVersionMismatch() {\n    const prevVersion = this.getItem(this.VERSION_STORAGE_KEY);\n    if (this.didVersionChange(prevVersion, version)) {\n      // If the current localstorage was created with another version of\n      // PuzzTool, clear the local storage to get rid of any obsolete or\n      // incompatible artifacts.\n      this.clear();\n\n      // Store the current version\n      this.setItem(this.VERSION_STORAGE_KEY, version);\n    }\n  }\n}\n\nexport default LocalStorage;\n","// generated by genversion\nexport const version = '0.7.0';\n","import superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import LocalStorageComponent from '../Data/LocalStorageComponent';\n\n// To inherit from this class:\n// 1. import Tab from 'react-bootstrap/Tab';\n// 2. import Tabs from 'react-bootstrap/Tabs';\n// 3. override render() and getLocalStorageKey()\n// 4. Ensure your constructor calls super()\n\ninterface Props {}\n\ninterface State {\n  activeKey: number;\n}\n\ninterface SavedState {\n  activeKey: number;\n}\n\nabstract class TabViewBase extends LocalStorageComponent<Props, State, SavedState> {\n  private _activeKey: number = 1;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      activeKey: this._activeKey,\n    };\n  }\n\n  /* Classes derived from TabViewBase should implement the following functions:\n\n  public render() {}\n\n  protected getLocalStorageKey() {\n    return 'YourClassNameHere';\n  }\n  */\n\n  protected onSaveState() {\n    return {\n      activeKey: this._activeKey,\n    };\n  }\n\n  protected onRestoreState(savedState: SavedState | null) {\n    if (savedState !== null) {\n      this._activeKey = savedState.activeKey;\n    }\n  }\n\n  protected onUpdateState() {\n    this.setState({\n      activeKey: this._activeKey,\n    });\n  }\n\n  protected onTabSelect(activeKey: number) {\n    this._activeKey = activeKey;\n    this.updateState();\n  }\n}\n\nexport default TabViewBase;\n","import React from 'react';\n\ninterface Props {\n  morseString: string;\n}\n\nexport function renderDot() {\n  return (\n    <svg className=\"MorsePicture-dotIcon\" viewBox=\"0 0 30 30\">\n      <circle cx=\"15\" cy=\"15\" r=\"15\" />\n      Sorry, your browser does not support inline SVG.\n    </svg>\n  );\n}\n\nexport function renderDash() {\n  return (\n    <svg className=\"MorsePicture-dashIcon\" viewBox=\"0 0 90 30\">\n      <rect width=\"90\" height=\"30\" />\n      Sorry, your browser does not support inline SVG.\n    </svg>\n  );\n}\n\nfunction MorsePicture(props: Props) {\n  return (\n    <>\n      {Array.from(props.morseString)\n        .map((value: string, index: number) => (\n          <span key={index}>\n            {value === '.' ? renderDot() : renderDash()}\n          </span>\n        ))}\n    </>\n  );\n}\n\nexport default MorsePicture;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Card from 'react-bootstrap/Card';\nimport { MorseCharacter as Character, MorseString } from 'puzzle-lib';\nimport LocalStorageComponent from '../Data/LocalStorageComponent';\nimport { renderDot, renderDash } from './MorsePicture';\nimport './MorseStream.scss';\n\ninterface Props {}\n\ninterface State {\n  morseStream: string;\n}\n\ninterface SavedState {\n  morseStream: string;\n}\n\nclass MorseStream extends LocalStorageComponent<Props, State, SavedState> {\n\n  private _morseStream: string = '';\n\n  constructor(props: Props) {\n    super(props);\n\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n\n    this.state = {\n      morseStream: this._morseStream,\n    };\n  }\n\n  public componentDidMount() {\n    super.componentDidMount();\n    document.addEventListener('keydown', this.onKeyDown);\n    document.addEventListener('keypress', this.onKeyPress);\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown);\n    document.removeEventListener('keypress', this.onKeyPress);\n  }\n\n  public render() {\n    return (\n      <div className=\"MorseStream\">\n        <Card className=\"MorseStream-morse-output\">\n          <Card.Header>Input</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.codeText()}<span className=\"blinking-cursor\">|</span>\n            </pre>\n          </Card.Body>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Plaintext</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.plainText() || ' '}\n            </pre>\n          </Card.Body>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Swap Dots/Dashes</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.invertText() || ' '}\n            </pre>\n          </Card.Body>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Right to Left</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.reverseText() || ' '}\n            </pre>\n          </Card.Body>\n        </Card>\n        <Card className=\"MorseStream-output\">\n          <Card.Header>Right to Left + Swap Dots/Dashes</Card.Header>\n          <Card.Body>\n            <pre>\n              {this.invertReverseText() || ' '}\n            </pre>\n          </Card.Body>\n        </Card>\n        <ButtonToolbar className=\"MorseStream-inputCommands\">\n          <ButtonGroup>\n            <Button\n              onClick={() => this.onDotClick()}\n              variant=\"primary\"\n            >\n              {renderDot()}\n            </Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button\n              onClick={() => this.onDashClick()}\n              variant=\"primary\"\n            >\n              {renderDash()}\n            </Button>\n          </ButtonGroup>\n        </ButtonToolbar>\n        <ButtonToolbar className=\"MorseStream-commands\">\n          <ButtonGroup>\n            <Button onClick={() => this.onBackspaceClick()}>&#x232b;</Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button onClick={() => this.onNextClick()}>Next</Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button\n              onClick={() => this.onClearClick()}\n              variant=\"danger\"\n            >\n              Clear\n            </Button>\n          </ButtonGroup>\n        </ButtonToolbar>\n      </div>\n    );\n  }\n\n  protected getLocalStorageKey() {\n    return 'MorseStream';\n  }\n\n  protected onSaveState() {\n    return {\n      morseStream: this._morseStream,\n    };\n  }\n\n  protected onRestoreState(savedState: SavedState | null) {\n    if (savedState !== null) {\n      this._morseStream = savedState.morseStream;\n    }\n  }\n\n  protected onUpdateState() {\n    this.setState({\n      morseStream: this._morseStream,\n    });\n  }\n\n  private codeText(): string {\n    // Replace dot with interpunct for readability\n    // Replace dash with full width hyphen for readability.  Don't use emdash\n    // because multiple emdashes get combined with no space between them.\n    return this._morseStream.replace(/\\./g, '\\u00b7').replace(/-/g, '\\uff0d');\n  }\n\n  private plainText(): string {\n    return new MorseString(this._morseStream).toString();\n  }\n\n  private invertText(): string {\n    return new MorseString(this._morseStream).invertDotsAndDashes().toString();\n  }\n\n  private reverseText(): string {\n    return new MorseString(this._morseStream).reverse().toString();\n  }\n\n  private invertReverseText(): string {\n    return new MorseString(this._morseStream)\n      .invertDotsAndDashes()\n      .reverse()\n      .toString();\n  }\n\n  private onKeyDown(ev: KeyboardEvent) {\n    if (ev.defaultPrevented) {\n      return;\n    }\n\n    let handled = false;\n\n    // Chrome won't trigger keypress for any keys that can invoke browser\n    // actions.\n    if ((ev.key === 'Backspace') || (ev.keyCode === 8)) { // Backspace\n      this.onBackspaceClick();\n      handled = true;\n    }\n\n    if (handled) {\n      ev.preventDefault();\n    }\n  }\n\n  private onKeyPress(ev: KeyboardEvent) {\n    if (ev.defaultPrevented) {\n      return;\n    }\n\n    let handled = true;\n    if (ev.key) {\n      switch (ev.key) {\n        case '-':\n        case 'j':\n          this.onDashClick();\n          break;\n        case '.':\n        case 'k':\n          this.onDotClick();\n          break;\n        case 'Enter':\n        case ' ':\n        case 'l':\n          this.onNextClick();\n          break;\n        case ';':\n          this.onBackspaceClick();\n          break;\n        default:\n          handled = false;\n      }\n    } else {\n      // Older browsers such as Edge don't support ev.key\n      switch (ev.keyCode) {\n        case 45: // '-'\n        case 106: // 'J'\n          this.onDashClick();\n          break;\n        case 46: // '.'\n        case 107: // 'K'\n          this.onDotClick();\n          break;\n        case 13: // Enter\n        case 32: // Space\n        case 108: // 'L'\n          this.onNextClick();\n          break;\n        case 59: // ';'\n          this.onBackspaceClick();\n          break;\n        default:\n          handled = false;\n      }\n    }\n\n    if (handled) {\n      ev.preventDefault();\n    }\n  }\n\n  private onDotClick() {\n    this._morseStream += Character.DOT;\n\n    this.updateState();\n  }\n\n  private onDashClick() {\n    this._morseStream += Character.DASH;\n\n    this.updateState();\n  }\n\n  private onBackspaceClick() {\n    if (this._morseStream.length > 0) {\n      this._morseStream =\n        this._morseStream.substring(0, this._morseStream.length - 1);\n    }\n\n    this.updateState();\n  }\n\n  private onNextClick() {\n    if (this._morseStream.length > 0) {\n      const lastCharacter = this._morseStream.slice(-1);\n      if (lastCharacter === MorseString.CHARACTER_DIVIDER) {\n        // Pressing next twice starts a new word\n        this._morseStream =\n          this._morseStream.substring(0, this._morseStream.length - 1) +\n          MorseString.WORD_DIVIDER;\n      } else if (lastCharacter !== MorseString.WORD_DIVIDER) {\n        this._morseStream += MorseString.CHARACTER_DIVIDER;\n      }\n    }\n\n    this.updateState();\n  }\n\n  private onClearClick() {\n    this._morseStream = '';\n\n    this.updateState();\n  }\n}\n\nexport default MorseStream;\n","import React from 'react';\nimport { MorseCharacter as Character } from 'puzzle-lib';\nimport Table from 'react-bootstrap/Table';\nimport MorsePicture from './MorsePicture';\nimport './MorseTable.scss';\n\nfunction MorseTable() {\n  const characters = new Character().getPotentialMatches();\n  return (\n    <div className=\"MorseTable\">\n      <Table striped={true} responsive={true}>\n        <thead>\n          <tr>\n            <th>Character</th>\n            <th>Morse</th>\n          </tr>\n        </thead>\n        <tbody>\n          {characters.map((entry) => (\n            <tr key={entry.display}>\n              <td>{entry.display}</td>\n              <td>\n                <div className=\"MorseTable-morseView\">\n                  <MorsePicture morseString={Character.toMorseString(entry.encoding)} />\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default MorseTable;\n","import React from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport TabViewBase from '../TabViewBase';\nimport MorseStream from '../../Morse/MorseStream';\nimport MorseTable from '../../Morse/MorseTable';\nimport './Morse.scss';\n\nclass Morse extends TabViewBase {\n  public render() {\n    return (\n      <div className=\"Morse\">\n        <Tabs\n          activeKey={this.state.activeKey}\n          id=\"Morse-tabs\"\n          // tslint:disable-next-line: no-any\n          onSelect={(activeKey: any) => this.onTabSelect(activeKey as number)}\n        >\n          <Tab className=\"Morse-tab-value\" eventKey={1} title=\"Value\">\n            <MorseStream />\n          </Tab>\n          <Tab eventKey={2} title=\"Reference\">\n            <MorseTable />\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n\n  protected getLocalStorageKey() {\n    return 'Morse';\n  }\n}\n\nexport default Morse;\n"],"sourceRoot":""}